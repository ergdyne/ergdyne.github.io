{"version":3,"sources":["display/fields.module.css","display/citizencard.module.css","app.module.css","display/movemodal.module.css","mockAPI/citizen.tsx","display/RadioField.tsx","display/MoveModal.tsx","display/CitizenCard.tsx","display/DistrictCitizens.tsx","display/DraftResults.tsx","display/TextField.tsx","display/ScavengerTotals.tsx","functions/randomFromList.tsx","mockAPI/getNames.tsx","mockAPI/createCitizens.tsx","mockAPI/localStorage.tsx","mockAPI/runDraft.tsx","mockAPI/createDistrict.tsx","functions/randomSummation.tsx","App.tsx","index.tsx"],"names":["module","exports","container","label","textField","radioNoWrap","radioOption","radioToggle","left","section","name","score","item","citizen","App","width25Percent","button","Position","SCORES","trainingOn","trainingOff","matchesPosition","generalist","basicFacility","advancedFacility","Assignment","POSITIONS","Center","Generalist","PointGuard","PowerForward","ShootingGuard","SmallForward","POSITION_OPTIONS","filter","x","map","value","ASSIGNMENT_OPTIONS","Labor","Scavenger","Training","MAX_BASKETBALL_APTITUDE","RadioOption","props","option","onChange","preferedValue","disabled","onClick","useCallback","selected","variant","react_default","a","createElement","Button","className","fields","RadioField","options","inline","concat","Fragment","RadioField_RadioOption","key","MoveModal","_useState","useState","_useState2","Object","slicedToArray","setDisabled","disable","show","excludeDismiss","districtNames","move","handleClose","currentDistrict","close","Modal","onHide","Header","closeButton","Title","Body","Array","from","_ref","_ref2","_ref3","_ref4","index","movemodal","Footer","displayPreferred","position","CitizenCard","update","district","showMoveModal","setShowMoveModal","openMoveModal","closeMoveModal","updatePosition","assignedPosition","updateWorkAssignment","assignment","citizencard","OverlayTrigger","placement","delay","hide","overlay","p","Tooltip","result","preferredPosition","basketBallAptitude","aboutCitizen","display_RadioField","undefined","DistrictCitizens","citizens","updateCitizen","moveCitizen","teamTotal","trainingValue","reduce","t","c","i","newDistrict","DraftResults","draftResults","citizenUpdate","TextField","type","ScavengerTotals","values","v","randomFromList","list","Math","floor","random","length","LETTERS","NAMES","getNames","amount","names","Set","size","last","first","charAt","add","createCitizens","sorted","arguments","ceil","sort","b","SCOUT_NUMBERS","SCOUT_MAX","GOVERNORS","INITIAL_CITIZENS","ADDITIONAL_CITIZENS","GAME_DATA","EMPTY_ROSTER","Map","createAndSetGameData","scoutNumbers","scoutMax","governors","initialCitizens","additionalCitizens","draft","governorCount","citizensPerGovernor","results","push","round","j","cs","facilities","advancedTraining","runDraft","scavengerNumbers","cards","max","current","randomSummation","extraCitizens","rosters","_","forEach","set","updateGameData","getOrCreateGameData","gameData","localStorage","getItem","JSON","parse","entries","r","resetGameData","tempData","fromEntries","setItem","stringify","console","log","roster","oldPlayer","get","oldPosition","citizenUpdater","onChangeGameDataBuilder","setValue","updateStore","writeStore","e","target","parsed","Number","isInteger","showReset","setShowReset","_useState3","_useState4","_useState5","_useState6","setGameData","_useState7","toString","_useState8","setScoutNumbers","_useState9","_useState10","setScoutMax","_useState11","_useState12","setGovernors","_useState13","_useState14","setInitialCitizens","_useState15","_useState16","setAdditionalCitizens","resetData","updateCitizenData","citizenMover","nextRound","d","maxTraining","min","progressRound","updateData","changeScoutNumbers","changeScoutMax","changeGovernors","changeInitialCitizens","changeAdditionalCitizens","clickReset","app","display_TextField","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.82a55a96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fields_container__1E8Zb\",\"label\":\"fields_label__2ZHJD\",\"textField\":\"fields_textField__1EM4s\",\"radioNoWrap\":\"fields_radioNoWrap__GwVEq\",\"radioOption\":\"fields_radioOption__2P4VG\",\"radioToggle\":\"fields_radioToggle__2L57R\",\"left\":\"fields_left__1C3eH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"citizencard_section__jcf3v\",\"name\":\"citizencard_name__2RzKv\",\"score\":\"citizencard_score__zJg_7\",\"item\":\"citizencard_item__3ryLV\",\"citizen\":\"citizencard_citizen__OVY-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__2_Cd6\",\"width25Percent\":\"app_width25Percent__2iD0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"movemodal_button__3RE2f\"};","\nimport Option from \"../types/Option\"\n\nexport const SCORES = {\n  trainingOn: 2,\n  trainingOff: -1,\n  matchesPosition: 10,\n  generalist: 5,\n  basicFacility: 5,\n  advancedFacility: 10,\n}\n\nexport enum Position {\n  PointGuard = 'Point Guard',\n  ShootingGuard = 'Shooting Guard',\n  SmallForward = 'Small Forward',\n  PowerForward = 'Power Forward',\n  Center = 'Center',\n  Generalist = 'Generalist',\n}\n\nexport const POSITIONS: Position[] = [\n  Position.Center,\n  Position.Generalist,\n  Position.PointGuard,\n  Position.PowerForward,\n  Position.ShootingGuard,\n  Position.SmallForward,\n]\n\nexport const POSITION_OPTIONS: Option[] = POSITIONS.filter(\n  x => x !== Position.Generalist\n).map(x => { return { label: x, value: x } })\n\nexport enum Assignment {\n  Labor = 'Labor',\n  Scavenger = 'Scavenger',\n  Training = 'Training',\n}\n\nexport const ASSIGNMENTS: Assignment[] = [\n  Assignment.Labor,\n  Assignment.Scavenger,\n  Assignment.Training\n]\n\nexport const ASSIGNMENT_OPTIONS: Option[] = ASSIGNMENTS.map(x => { return { label: x, value: x } })\n\nexport const MAX_BASKETBALL_APTITUDE = 100\n\nexport interface Citizen {\n  name: String\n  preferredPosition: Position\n  basketBallAptitude: number\n  assignment: Assignment\n  trainingValue: number\n  assignedPosition?: Position\n  //Store other information such as injury and current skill and UID\n}\n","import React, { useCallback } from \"react\"\nimport Button from 'react-bootstrap/Button'\nimport Option from \"../types/Option\"\nimport fields from \"./fields.module.css\"\n\ninterface OptionProps {\n  option: Option\n  onChange: (value: string) => void\n  value?: string\n  preferedValue?: string\n  disabled?: boolean\n}\n\ninterface Props {\n  options: Option[]\n  onChange: (value: string) => void\n  disabled?: boolean\n  label?: string\n  inline?: boolean\n  value?: string\n  preferedValue?: string\n}\n\nconst RadioOption = (props: OptionProps): JSX.Element => {\n  const { option, value, onChange, preferedValue, disabled } = props\n  const onClick = useCallback(() => { onChange(option.value) }, [option, onChange])\n  const selected = option.value === value\n  const variant = selected ? \"warning\" : (preferedValue === option.value ? \"secondary\" : \"dark\")\n\n  return (\n    <Button\n      className={fields.radioToggle}\n      onClick={onClick}\n      disabled={selected || disabled}\n      variant={variant}\n    >\n      {option.label}  \n    </Button>\n  )\n}\n\nconst RadioField = (props: Props): JSX.Element => {\n  const { value, options, onChange, disabled, label, inline, preferedValue } = props\n  return (\n    <div className={`${fields.container} ${fields.radioNoWrap} ${inline ? fields.left : ''}`}>\n      {label ? <div className={fields.label}>{label}</div> : <></>}\n      { options.map(option => <RadioOption\n          key={option.value}\n          option={option}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          preferedValue={preferedValue}\n        />)\n      }\n    </div>\n  )\n\n}\n\nexport default RadioField\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Citizen } from \"../mockAPI/citizen\";\nimport movemodal from \"./movemodal.module.css\"\n\ninterface Props {\n  show: boolean\n  citizen: Citizen\n  excludeDismiss: boolean\n  districtNames: Map<String, number>\n  move: (newDistrict: number | null) => void\n  handleClose: () => void\n  currentDistrict?: String\n}\n\nexport default function MoveModal(props: Props) {\n  const [disabled, setDisabled] = useState(false)\n  const disable = () => setDisabled(true)\n  const enable = () => setDisabled(false)\n\n  const { show, citizen, excludeDismiss, districtNames, move, handleClose, currentDistrict } = props\n  const close = () => {\n    enable()\n    handleClose()\n  }\n  const dismiss = () => {\n    disable()\n    move(null)\n    close()\n  }\n  return (\n    <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>{`Select Destination for ${citizen.name}`}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {Array.from(districtNames)\n        .filter(([name, _]) => name !== currentDistrict)\n        .map(([name, index]) => {\n          const toDistrict = () => {\n            disable()\n            move(index)\n            close()\n          }\n          return (\n            <div className={movemodal.button} key={index}>\n              <Button onClick={toDistrict} variant=\"warning\">{`District ${name}`}</Button>\n            </div>\n          )\n        })\n      }\n      {(excludeDismiss) ?\n        <></> :\n        <Button onClick={dismiss} variant=\"danger\">{`Dismiss Citizen`}</Button>\n      }\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={handleClose}>{`Back`}</Button>\n    </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport {\n  Citizen,\n  Position,\n  Assignment,\n  MAX_BASKETBALL_APTITUDE,\n  POSITION_OPTIONS,\n  ASSIGNMENT_OPTIONS,\n} from '../mockAPI/citizen'\nimport RadioField from './RadioField'\nimport { Button, OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap'\nimport MoveModal from './MoveModal'\nimport { District } from '../mockAPI/district'\nimport citizencard from \"./citizencard.module.css\"\n\ninterface Props {\n  citizen: Citizen\n  disabled: boolean\n  move: (newDistrict: number | null) => void\n  districtNames: Map<String, number>\n  district?: District\n  update?: (c: Citizen) => void\n}\n\nfunction displayPreferred(position: Position): string {\n  return (position == Position.Generalist) ? 'any position' : position\n}\n\nfunction aboutCitizen(citizen: Citizen): string {\n  let result = ``\n  \n  if (citizen.assignedPosition) {\n    result = result + `They are playing ${citizen.assignedPosition}, `\n    if ((\n      citizen.assignedPosition == citizen.preferredPosition ||\n      citizen.preferredPosition == Position.Generalist) &&\n      citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE\n    ) {\n      result = result + 'and '\n    } else {\n      result = result + 'but '\n    }\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result + `they prefer playing ${citizen.preferredPosition}`\n    } else {\n      result = result + `they would rather not.`\n    }\n  } else {\n    result = result + `They are currently working in ${citizen.assignment}. `\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result +\n        `They would prefer to be playing ${displayPreferred(citizen.preferredPosition)}.`\n    } else {\n      result = result +\n        `They could play ${displayPreferred(citizen.preferredPosition)}, but would rather not.`\n    }\n  }\n  return result\n}\n\nexport default function CitizenCard(props: Props) {\n  const { citizen, update, disabled, move, districtNames, district } = props\n  const [showMoveModal, setShowMoveModal] = useState(false)\n  const openMoveModal = useCallback(\n    () => { setShowMoveModal(true) }, [showMoveModal, setShowMoveModal]\n  )\n  const closeMoveModal = useCallback(\n    () => { setShowMoveModal(false) }, [showMoveModal, setShowMoveModal]\n  )\n\n  const updatePosition = useCallback((position: string | number) => {\n    citizen.assignedPosition = position as Position\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const updateWorkAssignment = useCallback((assignment: string | number) => {\n    citizen.assignment = assignment as Assignment\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const citizenBlurb = (p: TooltipProps) => (\n    <Tooltip {...p}> {aboutCitizen(citizen)} </Tooltip>\n  )\n\n  return (\n    <div className={citizencard.citizen}>\n      <div className={citizencard.section} >\n        <OverlayTrigger\n          placement='right'\n          delay={{ show: 250, hide: 400 }}\n          overlay={citizenBlurb}\n        >\n          <Button className={citizencard.name} variant='dark' > {citizen.name} </Button>\n        </OverlayTrigger>\n        <Button className={citizencard.score} variant='dark' >\n          {citizen.basketBallAptitude}\n        </Button>\n        <Button onClick={openMoveModal} className={citizencard.item} variant='warning' >\n          {`Move`}\n        </Button>\n      </div>\n      <RadioField\n        options={ASSIGNMENT_OPTIONS}\n        onChange={updateWorkAssignment}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignment}\n      />\n      <RadioField\n        options={POSITION_OPTIONS}\n        onChange={updatePosition}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignedPosition}\n        preferedValue={citizen.preferredPosition}\n      />\n      <MoveModal\n        show={showMoveModal}\n        citizen={citizen}\n        excludeDismiss={!update}\n        districtNames={districtNames}\n        move={move}\n        handleClose={closeMoveModal}\n        currentDistrict={(district) ? district.name : undefined}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { Citizen, Position, SCORES } from '../mockAPI/citizen'\nimport { District } from '../mockAPI/district'\nimport CitizenCard from './CitizenCard'\n\ninterface Props {\n  citizens: Citizen[]\n  districtNames: Map<String, number> \n  moveCitizen: (\n    citizen: Citizen,\n    newDistrict: number | null\n  ) => void\n  updateCitizen?: (c: Citizen) => void\n  district?: District\n  disabled?: boolean\n}\n\n\n// Add district title prop with calculation for team score +10 for preferred +5 for generalist\n// Training +2 / week, -1/week, range 0 - (5 or 10 (if advanced facility))\n\nexport default function DistrictCitizens(props: Props) {\n  const { district, citizens, updateCitizen, disabled, districtNames, moveCitizen } = props\n  const teamTotal = citizens.map(citizen => {\n    let value = 0\n    if (citizen.assignedPosition) {\n      value += citizen.basketBallAptitude\n      if (citizen.assignedPosition === citizen.preferredPosition) value += SCORES.matchesPosition\n      if (citizen.preferredPosition === Position.Generalist) value += SCORES.matchesPosition\n      if (citizen.trainingValue) value += citizen.trainingValue\n    }\n    return value\n  }).reduce((t, c) => t + c)\n\n  return (\n    <div>\n      <br/>\n      {\n        (district) ?\n        <h4>{`District ${district.name} | Last Round Score: ${teamTotal}`}</h4> :\n        <div/>\n      }\n      {citizens.map((citizen, i) => {\n\n        const move = (newDistrict: number | null) => moveCitizen(citizen, newDistrict)\n\n        return (<CitizenCard\n            key={i}\n            citizen={citizen}\n            district={district}\n            update={updateCitizen}\n            disabled={disabled || !updateCitizen}\n            move={move}\n            districtNames={districtNames}\n          />)\n        }\n      )}\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport { District } from '../mockAPI/district'\nimport DistrictCitizens from './DistrictCitizens'\n\ninterface Props {\n  draftResults: District[]\n  updateCitizen: (district: number, citizen: Citizen) => void\n  disabled: boolean\n  districtNames: Map<String, number> \n  moveCitizen: (\n    currentDistrict: number | null,\n    citizen: Citizen,\n    newDistrict: number | null\n  ) => void\n\n}\n\nexport default function DraftResults(props: Props) {\n  const { draftResults, updateCitizen, disabled, moveCitizen, districtNames } = props\n  return (<div>\n    { draftResults.map((district, i) => {\n        const citizens = district.citizens\n        const citizenUpdate = useCallback(\n          (citizen: Citizen) => { updateCitizen(i, citizen) },\n          [citizens, i]\n        )\n\n        const moveDistrictCitizen = (\n          citizen: Citizen,\n          newDistrict: number | null\n        ) => moveCitizen(i, citizen, newDistrict)\n\n        return (\n          <DistrictCitizens\n            key={i}\n            citizens={citizens}\n            district={district}\n            updateCitizen={citizenUpdate}\n            disabled={disabled}\n            districtNames={districtNames}\n            moveCitizen={moveDistrictCitizen}\n          />\n        )\n      })\n    }\n  </div>)\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst TextField = (props: Props): JSX.Element => {\n  const { label, value, disabled, onChange } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.label}>{label}</div>\n      <input\n        type=\"text\"\n        className={fields.textField}\n        disabled={disabled}\n        value={value}\n        onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface Props {\n  values: number[]\n}\n\nexport default function ScavengerTotals(props: Props){\n  const { values } = props\n  return (\n    <div>\n      {\n        values.map((v, i) => <Button key={i} variant={(i%2 == 0) ? \"light\" : \"dark\"}> { v } </Button>)\n\n      }\n    </div>\n  )\n}\n","export default function randomFromList<Type>(list: Type[]): Type {\n  return list[Math.floor(Math.random() * list.length)]\n}\n","import randomFromList from \"../functions/randomFromList\"\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfunction getNames(amount: number): string[]{\n  const names: Set<string> = new Set()\n\n  while(names.size < amount){\n    const last = randomFromList(NAMES)\n    const first = LETTERS.charAt(Math.floor(Math.random() * LETTERS.length))\n    names.add(`${first}. ${last}`)\n  }\n\n  return Array.from(names)\n}\n\nconst NAMES = [\n\t'SMITH',\n\t'JOHNSON',\n\t'WILLIAMS',\n\t'JONES',\n\t'BROWN',\n\t'DAVIS',\n\t'MILLER',\n\t'WILSON',\n\t'MOORE',\n\t'TAYLOR',\n\t'ANDERSON',\n\t'THOMAS',\n\t'JACKSON',\n\t'WHITE',\n\t'HARRIS',\n\t'MARTIN',\n\t'THOMPSON',\n\t'GARCIA',\n\t'MARTINEZ',\n\t'ROBINSON',\n\t'CLARK',\n\t'RODRIGUEZ',\n\t'LEWIS',\n\t'LEE',\n\t'WALKER',\n\t'HALL',\n\t'ALLEN',\n\t'YOUNG',\n\t'HERNANDEZ',\n\t'KING',\n\t'WRIGHT',\n\t'LOPEZ',\n\t'HILL',\n\t'SCOTT',\n\t'GREEN',\n\t'ADAMS',\n\t'BAKER',\n\t'GONZALEZ',\n\t'NELSON',\n\t'CARTER',\n\t'MITCHELL',\n\t'PEREZ',\n\t'ROBERTS',\n\t'TURNER',\n\t'PHILLIPS',\n\t'CAMPBELL',\n\t'PARKER',\n\t'EVANS',\n\t'EDWARDS',\n\t'COLLINS',\n\t'STEWART',\n\t'SANCHEZ',\n\t'MORRIS',\n\t'ROGERS',\n\t'REED',\n\t'COOK',\n\t'MORGAN',\n\t'BELL',\n\t'MURPHY',\n\t'BAILEY',\n\t'RIVERA',\n\t'COOPER',\n\t'RICHAR',\n]\nexport default getNames\n","import randomFromList from '../functions/randomFromList';\nimport getNames from './getNames';\nimport { Citizen, POSITIONS, MAX_BASKETBALL_APTITUDE, Assignment } from './citizen';\n\nexport default function createCitizens(amount: number, sorted:boolean = true): Citizen[] {\n  //Sorted by basketball Aptitude\n  const citizens: Citizen[] = getNames(amount).map(name => {\n    const citizen: Citizen = {\n      name: name,\n      basketBallAptitude: Math.ceil(Math.random() * MAX_BASKETBALL_APTITUDE),\n      preferredPosition: randomFromList(POSITIONS),\n      assignment: Assignment.Labor,\n      trainingValue: 0,\n    }\n    return citizen\n  })\n  if(sorted) citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n  return citizens\n}\n","import randomSummation from \"../functions/randomSummation\"\nimport { Assignment, Citizen, Position, SCORES } from \"./citizen\"\nimport createCitizens from \"./createCitizens\"\nimport { District } from \"./district\"\nimport runDraft from \"./runDraft\"\n\nconst SCOUT_NUMBERS = 20\nconst SCOUT_MAX = 40\n\nconst GOVERNORS = 16\nconst INITIAL_CITIZENS = 10\n\nconst ADDITIONAL_CITIZENS = 50\n\nconst GAME_DATA = 'GAME_DATA'\n\nexport const EMPTY_GAME_DATA: GameData = {\n  draft: [],\n  rosters: [],\n  scavengerNumbers: [],\n  extraCitizens: [],\n  scoutNumbers: 0,\n  scoutMax: 0,\n  governors: 0,\n  initialCitizens: 0,\n  additionalCitizens: 0,\n  round: 0,\n  districtNames: new Map<String, number>()\n}\n\nconst EMPTY_ROSTER: Map<Position, Citizen | null> = new Map<Position, Citizen | null>()\nEMPTY_ROSTER.set(Position.Center, null)\n\n\nexport interface GameData {\n  draft: District[]\n  rosters: Map<Position, Citizen | null>[]\n  scavengerNumbers: number[]\n  extraCitizens: Citizen[]\n  scoutNumbers: number\n  scoutMax: number\n  governors: number\n  initialCitizens: number\n  additionalCitizens: number\n  round: number\n  districtNames: Map<String, number>\n}\n\nexport function createAndSetGameData(\n  scoutNumbers: number = SCOUT_NUMBERS,\n  scoutMax: number = SCOUT_MAX,\n  governors: number = GOVERNORS,\n  initialCitizens: number = INITIAL_CITIZENS,\n  additionalCitizens: number = ADDITIONAL_CITIZENS,\n): GameData {\n  const draft = runDraft(governors, initialCitizens)\n  const scavengerNumbers = randomSummation(scoutNumbers, scoutMax)\n  const extraCitizens = createCitizens(additionalCitizens, false)\n  const rosters = draft.map( _ => new Map(EMPTY_ROSTER))\n  const districtNames = new Map<String, number>()\n  draft.forEach((district, i) => districtNames.set(district.name, i))\n  const gameData: GameData = {\n    draft,\n    rosters,\n    scavengerNumbers,\n    extraCitizens,\n    scoutNumbers,\n    scoutMax,\n    governors,\n    initialCitizens,\n    additionalCitizens,\n    round: 0,\n    districtNames,\n  }\n  \n  return updateGameData(gameData)\n}\n\nexport function getOrCreateGameData() {\n  const gameData: string | null = localStorage.getItem(GAME_DATA)\n  const result: GameData = gameData ? JSON.parse(gameData) : createAndSetGameData()\n  //convert objects to maps\n  result.districtNames = new Map(Object.entries(result.districtNames)) as Map<String, number>\n  result.rosters = result.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return result\n}\n\nexport function resetGameData() {\n  const gameData = getOrCreateGameData()\n  return createAndSetGameData(\n    gameData.scoutNumbers,\n    gameData.scoutMax,\n    gameData.governors,\n    gameData.initialCitizens,\n    gameData.additionalCitizens,\n  )\n}\n\nexport function updateGameData(gameData: GameData): GameData {\n  const tempData: any = gameData\n  //handle conversion to objects\n  tempData.rosters = gameData.rosters.map(r => Object.fromEntries(r))\n  tempData.districtNames = Object.fromEntries(gameData.districtNames)\n  localStorage.setItem(GAME_DATA, JSON.stringify(tempData))\n  //Handle conversion back to map\n  gameData.rosters = gameData.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  gameData.districtNames = new Map(Object.entries(gameData.districtNames))\n  return gameData\n}\n\nfunction citizenUpdater(\n  gameData: GameData,\n  district: number,\n  citizen: Citizen\n): GameData {\n  if (gameData.draft.length <= district) {\n    console.log(\"Error updatePositionAssignment: invalid district \", district, gameData)\n    return gameData\n  }\n  if (!gameData.rosters || gameData.rosters.length <= district) {\n    console.log(\"Error updatePositionAssignment: no rosters\", district, gameData)\n    return gameData\n  }\n  const citizens = gameData.draft[district].citizens\n  const roster = gameData.rosters[district]\n  const position = citizen.assignedPosition\n  const oldPlayer = !position ? undefined : roster.get(position)\n  for (let i = 0; i < citizens.length; i++) {\n    if (oldPlayer && oldPlayer.name) {\n      if (citizens[i].name === oldPlayer.name) {\n        citizens[i].assignedPosition = undefined\n      }\n    }\n    if (citizens[i].name === citizen.name) {\n      const oldPosition = citizens[i].assignedPosition\n      if (oldPosition && citizen.assignedPosition !== oldPosition) roster.set(oldPosition, null)\n      citizens[i] = citizen\n    }\n  }\n  if (position) roster.set(position, citizen)\n  \n  return updateGameData(gameData)\n}\n\nexport function updateCitizen(\n  district: number,\n  citizen: Citizen\n): GameData {\n  return citizenUpdater(getOrCreateGameData(), district, citizen)\n}\n\nexport function moveCitizen(\n  currentDistrict: number | null,\n  citizen: Citizen,\n  newDistrict: number | null\n): GameData {\n  const gameData = getOrCreateGameData()\n  if (currentDistrict === null) {\n    const citizens = gameData.extraCitizens\n    gameData.extraCitizens = citizens.filter(c => c.name !== citizen.name)\n  } else {\n    const citizens = gameData.draft[currentDistrict].citizens\n    gameData.draft[currentDistrict].citizens = citizens.filter(c => c.name !== citizen.name)\n    if (citizen.assignedPosition) {\n      const roster = gameData.rosters[currentDistrict]\n      roster.set(citizen.assignedPosition, null)\n      gameData.rosters[currentDistrict] = roster\n    }\n  }\n\n  if (newDistrict !== null) {\n    const citizens = gameData.draft[newDistrict].citizens\n    citizens.push(citizen)\n    citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n    gameData.draft[newDistrict].citizens = citizens\n  }\n\n  return updateGameData(gameData)\n}\n\nexport function progressRound(): GameData {\n  const gameData = getOrCreateGameData()\n  for (let d = 0; d < gameData.draft.length; d++) {\n    const maxTraining =\n      gameData.draft[d].facilities.advancedTraining ? SCORES.advancedFacility : SCORES.basicFacility\n    for (let c = 0; c < gameData.draft[d].citizens.length; c++) {\n      const citizen = gameData.draft[d].citizens[c]\n      let trainingValue = citizen.trainingValue\n      if (citizen.assignment === Assignment.Training) {\n        trainingValue = Math.min(maxTraining, trainingValue + SCORES.trainingOn)\n      } else {\n        trainingValue = Math.max(0, trainingValue + SCORES.trainingOff)\n      }\n      gameData.draft[d].citizens[c].trainingValue = trainingValue\n    }\n  }\n\n  if (gameData.extraCitizens.length < gameData.additionalCitizens) {\n    createCitizens(gameData.additionalCitizens - gameData.extraCitizens.length, false)\n      .forEach(citizen => gameData.extraCitizens.push(citizen))\n  }\n  gameData.round += 1\n  return updateGameData(gameData)\n}\n","\nimport { Citizen } from \"./citizen\";\nimport createCitizens from \"./createCitizens\";\nimport createDistrict from \"./createDistrict\";\nimport { District } from \"./district\";\n\nexport default function runDraft(governorCount: number, citizensPerGovernor: number): District[]{\n  const citizens = createCitizens(governorCount*citizensPerGovernor)\n  const results: Citizen[][] = []\n  for(let i=0; i<governorCount; i++){\n    results.push([])\n  }\n  let round = 0\n  \n  while (round < citizensPerGovernor) {\n    if (round%2 == 0) {\n      for(let i=0; i<governorCount; i++) {\n        results[i].push(citizens[round*governorCount + i])\n      }\n    } else {\n      let j = 0\n      for(let i=governorCount - 1; i >= 0; i--) {\n        results[i].push(citizens[round*governorCount + j])\n        j++\n      }\n    }\n    round++\n  }\n  return results.map((cs, index) => createDistrict(cs, `${index + 137}`))\n}\n","import { Citizen } from \"./citizen\";\nimport { District } from \"./district\";\n\nexport default function createDistrict(citizens: Citizen[], name: String): District {\n  return {\n    name: name,\n    citizens: citizens,\n    facilities: {\n      advancedTraining: false,\n    },\n  }\n}\n","export default function randomSummation(cards: number, max: number) {\n  const result: number[] = []\n  let current = 0\n  while (result.length < cards) {\n    current = current + Math.ceil(Math.random() * max)\n    result.push(current)\n  }\n  return result\n}\n","import React, { useCallback, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport DraftResults from './display/DraftResults';\nimport TextField from './display/TextField';\nimport ScavengerTotals from './display/ScavengerTotals';\nimport {\n  getOrCreateGameData,\n  resetGameData,\n  updateGameData,\n  updateCitizen,\n  progressRound,\n  moveCitizen,\n} from './mockAPI/localStorage';\nimport DistrictCitizens from './display/DistrictCitizens';\nimport { Citizen } from './mockAPI/citizen';\nimport { OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap';\nimport app from \"./app.module.css\"\n\n\n//Change these to change output\n\nfunction onChangeGameDataBuilder(\n  value: string,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  updateStore: (x: number) => void,\n  writeStore: () => void,\n): ((e: React.ChangeEvent<HTMLInputElement>) => void) {\n  return useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) { setValue(e.target.value) }\n    const parsed = Number(e.target.value)\n    if (Number.isInteger(parsed) && parsed > 0) {\n      updateStore(parsed)\n      writeStore()\n    }\n  }, [value, setValue, updateStore, writeStore])\n}\n\nfunction App() {\n  const [showReset, setShowReset] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [gameData, setGameData] = useState(getOrCreateGameData())\n  const [scoutNumbers, setScoutNumbers] = useState(gameData.scoutNumbers.toString())\n  const [scoutMax, setScoutMax] = useState(gameData.scoutMax.toString())\n  const [governors, setGovernors] = useState(gameData.governors.toString())\n  const [initialCitizens, setInitialCitizens] = useState(gameData.initialCitizens.toString())\n  const [\n    additionalCitizens, setAdditionalCitizens\n  ] = useState(gameData.additionalCitizens.toString())\n\n  const resetData = useCallback(() => {\n    //For when using actual API\n    setDisabled(true)\n    setGameData(resetGameData())\n    setDisabled(false)\n  }, [resetGameData])\n\n  const updateCitizenData = useCallback(\n    (district: number, citizen: Citizen) => {\n      setDisabled(true)\n      setGameData(updateCitizen(district, citizen))\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  const citizenMover = useCallback((\n    currentDistrict: number | null,\n    citizen: Citizen,\n    newDistrict: number | null\n  ) => {\n    setDisabled(true)\n    setGameData(moveCitizen(currentDistrict, citizen, newDistrict))\n    setDisabled(false)\n  }, [moveCitizen])\n\n  const draftCitizen =\n    (citizen: Citizen, newDistrict: number | null) => citizenMover(null, citizen, newDistrict)\n\n  const nextRound = useCallback(\n    () => {\n      setDisabled(true)\n      setGameData(progressRound())\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  function updateScoutNumbers(x: number) { gameData.scoutNumbers = x }\n  function updateScoutMax(x: number) { gameData.scoutMax = x }\n  function updateGovernors(x: number) { gameData.governors = x }\n  function updateInitialCitizens(x: number) { gameData.initialCitizens = x }\n  function updateAdditionalCitizens(x: number) { gameData.additionalCitizens = x }\n\n  function updateData(){\n    //For when using actual API\n    setDisabled(true)\n    setGameData(updateGameData(gameData))\n    setDisabled(false)\n  }\n\n  const changeScoutNumbers = onChangeGameDataBuilder(\n    scoutNumbers, setScoutNumbers, updateScoutNumbers, updateData\n  )\n  const changeScoutMax = onChangeGameDataBuilder(\n    scoutMax, setScoutMax, updateScoutMax, updateData\n  )\n  const changeGovernors = onChangeGameDataBuilder(\n    governors, setGovernors, updateGovernors, updateData\n  )\n  const changeInitialCitizens = onChangeGameDataBuilder(\n    initialCitizens, setInitialCitizens, updateInitialCitizens, updateData\n  )\n  const changeAdditionalCitizens = onChangeGameDataBuilder(\n    additionalCitizens, setAdditionalCitizens, updateAdditionalCitizens, updateData\n  )\n\n  const clickReset = useCallback(() => setShowReset(!showReset), [showReset, setShowReset])\n\n  const confirmReset = (p: TooltipProps) => (\n    <Tooltip {...p}> {\n      <div>\n        <h1>{`Are you sure you want to Reset?`}</h1>\n        <h3>{`All data will be lost`}</h3>\n        <Button variant='danger' onClick={resetData}>{`Yes, Reset the Game`}</Button>\n      </div>\n    } </Tooltip>\n  )\n\n  return (\n    <div className={app.App}>\n      <h3>{`Configuration - Scroll to bottom to reset`}</h3>\n      <TextField\n        label={\"Total Scavenger Values\"}\n        value={scoutNumbers}\n        onChange={changeScoutNumbers}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Max Scavenger Value\"}\n        value={scoutMax}\n        onChange={changeScoutMax}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Governors\"}\n        value={governors}\n        onChange={changeGovernors}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Initial Citizens per Governor\"}\n        value={initialCitizens}\n        onChange={changeInitialCitizens}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Total Additional Citizens\"}\n        value={additionalCitizens}\n        onChange={changeAdditionalCitizens}\n        disabled={disabled}\n      />\n      <h3>{`Current Round is ${gameData.round}`}</h3>\n      <div className={app.width25Percent}>\n        <Button variant='warning' disabled={disabled} onClick={nextRound}>\n          {`Progress Round`}\n        </Button>\n      </div>\n      <h3>Scavenger Values</h3>\n      <ScavengerTotals values={gameData.scavengerNumbers || []} />\n      <br/>\n      <h3>Draft Results</h3>\n      <DraftResults\n        draftResults={gameData.draft}\n        updateCitizen={updateCitizenData}\n        districtNames={gameData.districtNames}\n        disabled={disabled}\n        moveCitizen={citizenMover}\n      />\n\n      <br/>\n      <h3>Additional Citizens</h3>\n      <DistrictCitizens\n        citizens={gameData.extraCitizens}\n        districtNames={gameData.districtNames}\n        moveCitizen={draftCitizen}\n      />\n      <OverlayTrigger\n        placement='top'\n        overlay={confirmReset}\n        delay={{ show: 250, hide: 400 }}\n      >\n        <Button disabled={disabled} variant='warning' onClick={clickReset}>Reset Game</Button>\n      </OverlayTrigger>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}