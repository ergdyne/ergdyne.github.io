{"version":3,"sources":["display/citizencard.module.css","app.module.css","display/movemodal.module.css","mockAPI/citizen.tsx","display/CheckBox.tsx","display/RadioField.tsx","display/MoveModal.tsx","display/CitizenCard.tsx","display/DistrictCitizens.tsx","display/DraftResults.tsx","display/TextField.tsx","display/ScavengerTotals.tsx","functions/randomFromList.tsx","mockAPI/getNames.tsx","mockAPI/createCitizens.tsx","mockAPI/localStorage.tsx","mockAPI/runDraft.tsx","mockAPI/createDistrict.tsx","functions/randomSummation.tsx","App.tsx","index.tsx","display/fields.module.css"],"names":["module","exports","section","name","score","item","citizen","App","width25Percent","button","Position","SCORES","trainingOn","trainingOff","matchesPosition","generalist","basicFacility","advancedFacility","Assignment","POSITIONS","Center","Generalist","PointGuard","PowerForward","ShootingGuard","SmallForward","POSITION_OPTIONS","filter","x","map","label","value","ASSIGNMENT_OPTIONS","Labor","Scavenger","Training","MAX_BASKETBALL_APTITUDE","CheckBox","props","checked","onChange","disabled","react_default","a","createElement","className","fields","container","checkBox","type","RadioOption","option","preferedValue","onClick","useCallback","selected","variant","Button","radioToggle","RadioField","options","inline","concat","radioNoWrap","left","Fragment","RadioField_RadioOption","key","MoveModal","_useState","useState","_useState2","Object","slicedToArray","setDisabled","disable","show","excludeDismiss","districtNames","move","handleClose","currentDistrict","close","Modal","onHide","Header","closeButton","Title","Body","Array","from","_ref","_ref2","_ref3","_ref4","index","movemodal","Footer","displayPreferred","position","CitizenCard","update","district","showMoveModal","setShowMoveModal","openMoveModal","closeMoveModal","updatePosition","assignedPosition","updateWorkAssignment","assignment","citizencard","OverlayTrigger","placement","delay","hide","overlay","p","Tooltip","result","preferredPosition","basketBallAptitude","aboutCitizen","display_RadioField","undefined","DistrictCitizens","citizens","updateCitizen","moveCitizen","updateDistrict","teamTotal","useMemo","trainingValue","reduce","t","c","updateFacility","e","facilities","advancedTraining","target","display_CheckBox","i","newDistrict","DraftResults","draftResults","citizenUpdate","districtUpdate","TextField","textField","ScavengerTotals","values","v","randomFromList","list","Math","floor","random","length","LETTERS","NAMES","getNames","amount","names","Set","size","last","first","charAt","add","createCitizens","sorted","arguments","ceil","sort","b","SCOUT_NUMBERS","SCOUT_MAX","GOVERNORS","INITIAL_CITIZENS","ADDITIONAL_CITIZENS","GAME_DATA","EMPTY_ROSTER","Map","createAndSetGameData","scoutNumbers","scoutMax","governors","initialCitizens","additionalCitizens","draft","governorCount","citizensPerGovernor","results","push","round","j","cs","runDraft","scavengerNumbers","cards","max","current","randomSummation","extraCitizens","rosters","_","forEach","set","updateGameData","getOrCreateGameData","gameData","localStorage","getItem","JSON","parse","entries","r","resetGameData","tempData","fromEntries","setItem","stringify","console","log","roster","oldPlayer","get","oldPosition","citizenUpdater","onChangeGameDataBuilder","setValue","updateStore","writeStore","parsed","Number","isInteger","showReset","setShowReset","_useState3","_useState4","_useState5","_useState6","setGameData","_useState7","toString","_useState8","setScoutNumbers","_useState9","_useState10","setScoutMax","_useState11","_useState12","setGovernors","_useState13","_useState14","setInitialCitizens","_useState15","_useState16","setAdditionalCitizens","resetData","updateCitizenData","citizenMover","nextRound","d","maxTraining","min","progressRound","updateData","districtNumber","updateDistrictAPI","changeScoutNumbers","changeScoutMax","changeGovernors","changeInitialCitizens","changeAdditionalCitizens","clickReset","app","display_TextField","ReactDOM","render","StrictMode","src_App","document","getElementById","radioOption"],"mappings":"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","file":"static/js/main.5c409f74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"citizencard_section__jcf3v\",\"name\":\"citizencard_name__2RzKv\",\"score\":\"citizencard_score__zJg_7\",\"item\":\"citizencard_item__3ryLV\",\"citizen\":\"citizencard_citizen__OVY-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__2_Cd6\",\"width25Percent\":\"app_width25Percent__2iD0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"movemodal_button__3RE2f\"};","\nimport Option from \"../types/Option\"\n\nexport const SCORES = {\n  trainingOn: 2,\n  trainingOff: -1,\n  matchesPosition: 10,\n  generalist: 5,\n  basicFacility: 5,\n  advancedFacility: 10,\n}\n\nexport enum Position {\n  PointGuard = 'Point Guard',\n  ShootingGuard = 'Shooting Guard',\n  SmallForward = 'Small Forward',\n  PowerForward = 'Power Forward',\n  Center = 'Center',\n  Generalist = 'Generalist',\n}\n\nexport const POSITIONS: Position[] = [\n  Position.Center,\n  Position.Generalist,\n  Position.PointGuard,\n  Position.PowerForward,\n  Position.ShootingGuard,\n  Position.SmallForward,\n]\n\nexport const POSITION_OPTIONS: Option[] = POSITIONS.filter(\n  x => x !== Position.Generalist\n).map(x => { return { label: x, value: x } })\n\nexport enum Assignment {\n  Labor = 'Labor',\n  Scavenger = 'Scavenger',\n  Training = 'Training',\n}\n\nexport const ASSIGNMENTS: Assignment[] = [\n  Assignment.Labor,\n  Assignment.Scavenger,\n  Assignment.Training\n]\n\nexport const ASSIGNMENT_OPTIONS: Option[] = ASSIGNMENTS.map(x => { return { label: x, value: x } })\n\nexport const MAX_BASKETBALL_APTITUDE = 100\n\nexport interface Citizen {\n  name: String\n  preferredPosition: Position\n  basketBallAptitude: number\n  assignment: Assignment\n  trainingValue: number\n  assignedPosition?: Position\n  //Store other information such as injury and current skill and UID\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  checked: boolean\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst CheckBox = (props: Props): JSX.Element => {\n  const { label, checked, onChange, disabled } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.checkBox}>\n        <input\n          name={label}\n          type=\"checkbox\"\n          checked={checked}\n          onChange={onChange}\n        />\n      </div>\n      \n      <div className={fields.label}>{label}</div>\n    </div>\n  )\n}\n\nexport default CheckBox\n","import React, { useCallback } from \"react\"\nimport Button from 'react-bootstrap/Button'\nimport Option from \"../types/Option\"\nimport fields from \"./fields.module.css\"\n\ninterface OptionProps {\n  option: Option\n  onChange: (value: string) => void\n  value?: string\n  preferedValue?: string\n  disabled?: boolean\n}\n\ninterface Props {\n  options: Option[]\n  onChange: (value: string) => void\n  disabled?: boolean\n  label?: string\n  inline?: boolean\n  value?: string\n  preferedValue?: string\n}\n\nconst RadioOption = (props: OptionProps): JSX.Element => {\n  const { option, value, onChange, preferedValue, disabled } = props\n  const onClick = useCallback(() => { onChange(option.value) }, [option, onChange])\n  const selected = option.value === value\n  const variant = selected ? \"warning\" : (preferedValue === option.value ? \"secondary\" : \"dark\")\n\n  return (\n    <Button\n      className={fields.radioToggle}\n      onClick={onClick}\n      disabled={selected || disabled}\n      variant={variant}\n    >\n      {option.label}  \n    </Button>\n  )\n}\n\nconst RadioField = (props: Props): JSX.Element => {\n  const { value, options, onChange, disabled, label, inline, preferedValue } = props\n  return (\n    <div className={`${fields.container} ${fields.radioNoWrap} ${inline ? fields.left : ''}`}>\n      {label ? <div className={fields.label}>{label}</div> : <></>}\n      { options.map(option => <RadioOption\n          key={option.value}\n          option={option}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          preferedValue={preferedValue}\n        />)\n      }\n    </div>\n  )\n\n}\n\nexport default RadioField\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Citizen } from \"../mockAPI/citizen\";\nimport movemodal from \"./movemodal.module.css\"\n\ninterface Props {\n  show: boolean\n  citizen: Citizen\n  excludeDismiss: boolean\n  districtNames: Map<String, number>\n  move: (newDistrict: number | null) => void\n  handleClose: () => void\n  currentDistrict?: String\n}\n\nexport default function MoveModal(props: Props) {\n  const [disabled, setDisabled] = useState(false)\n  const disable = () => setDisabled(true)\n  const enable = () => setDisabled(false)\n\n  const { show, citizen, excludeDismiss, districtNames, move, handleClose, currentDistrict } = props\n  const close = () => {\n    enable()\n    handleClose()\n  }\n  const dismiss = () => {\n    disable()\n    move(null)\n    close()\n  }\n  return (\n    <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>{`Select Destination for ${citizen.name}`}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {Array.from(districtNames)\n        .filter(([name, _]) => name !== currentDistrict)\n        .map(([name, index]) => {\n          const toDistrict = () => {\n            disable()\n            move(index)\n            close()\n          }\n          return (\n            <div className={movemodal.button} key={index}>\n              <Button onClick={toDistrict} variant=\"warning\">{`District ${name}`}</Button>\n            </div>\n          )\n        })\n      }\n      {(excludeDismiss) ?\n        <></> :\n        <Button onClick={dismiss} variant=\"danger\">{`Dismiss Citizen`}</Button>\n      }\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={handleClose}>{`Back`}</Button>\n    </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport {\n  Citizen,\n  Position,\n  Assignment,\n  MAX_BASKETBALL_APTITUDE,\n  POSITION_OPTIONS,\n  ASSIGNMENT_OPTIONS,\n} from '../mockAPI/citizen'\nimport RadioField from './RadioField'\nimport { Button, OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap'\nimport MoveModal from './MoveModal'\nimport { District } from '../mockAPI/district'\nimport citizencard from \"./citizencard.module.css\"\n\ninterface Props {\n  citizen: Citizen\n  disabled: boolean\n  move: (newDistrict: number | null) => void\n  districtNames: Map<String, number>\n  district?: District\n  update?: (c: Citizen) => void\n}\n\nfunction displayPreferred(position: Position): string {\n  return (position == Position.Generalist) ? 'any position' : position\n}\n\nfunction aboutCitizen(citizen: Citizen): string {\n  let result = ``\n  \n  if (citizen.assignedPosition) {\n    result = result + `They are playing ${citizen.assignedPosition}, `\n    if ((\n      citizen.assignedPosition == citizen.preferredPosition ||\n      citizen.preferredPosition == Position.Generalist) &&\n      citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE\n    ) {\n      result = result + 'and '\n    } else {\n      result = result + 'but '\n    }\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result + `they prefer playing ${citizen.preferredPosition}`\n    } else {\n      result = result + `they would rather not.`\n    }\n  } else {\n    result = result + `They are currently working in ${citizen.assignment}. `\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result +\n        `They would prefer to be playing ${displayPreferred(citizen.preferredPosition)}.`\n    } else {\n      result = result +\n        `They could play ${displayPreferred(citizen.preferredPosition)}, but would rather not.`\n    }\n  }\n  return result\n}\n\nexport default function CitizenCard(props: Props) {\n  const { citizen, update, disabled, move, districtNames, district } = props\n  const [showMoveModal, setShowMoveModal] = useState(false)\n  const openMoveModal = useCallback(\n    () => { setShowMoveModal(true) }, [showMoveModal, setShowMoveModal]\n  )\n  const closeMoveModal = useCallback(\n    () => { setShowMoveModal(false) }, [showMoveModal, setShowMoveModal]\n  )\n\n  const updatePosition = useCallback((position: string | number) => {\n    citizen.assignedPosition = position as Position\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const updateWorkAssignment = useCallback((assignment: string | number) => {\n    citizen.assignment = assignment as Assignment\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const citizenBlurb = (p: TooltipProps) => (\n    <Tooltip {...p}> {aboutCitizen(citizen)} </Tooltip>\n  )\n\n  return (\n    <div className={citizencard.citizen}>\n      <div className={citizencard.section} >\n        <OverlayTrigger\n          placement='right'\n          delay={{ show: 250, hide: 400 }}\n          overlay={citizenBlurb}\n        >\n          <Button className={citizencard.name} variant='dark' > {citizen.name} </Button>\n        </OverlayTrigger>\n        <Button className={citizencard.score} variant='dark' >\n          {citizen.basketBallAptitude}\n        </Button>\n        <Button onClick={openMoveModal} className={citizencard.item} variant='warning' >\n          {`Move`}\n        </Button>\n      </div>\n      <RadioField\n        options={ASSIGNMENT_OPTIONS}\n        onChange={updateWorkAssignment}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignment}\n      />\n      <RadioField\n        options={POSITION_OPTIONS}\n        onChange={updatePosition}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignedPosition}\n        preferedValue={citizen.preferredPosition}\n      />\n      <MoveModal\n        show={showMoveModal}\n        citizen={citizen}\n        excludeDismiss={!update}\n        districtNames={districtNames}\n        move={move}\n        handleClose={closeMoveModal}\n        currentDistrict={(district) ? district.name : undefined}\n      />\n    </div>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { Citizen, Position, SCORES } from '../mockAPI/citizen'\nimport { District } from '../mockAPI/district'\nimport CheckBox from './CheckBox'\nimport CitizenCard from './CitizenCard'\n\ninterface Props {\n  citizens: Citizen[]\n  districtNames: Map<String, number> \n  moveCitizen: (\n    citizen: Citizen,\n    newDistrict: number | null\n  ) => void\n  updateCitizen?: (c: Citizen) => void\n  district?: District\n  disabled?: boolean\n  updateDistrict?: (d: District) => void\n}\n\nexport default function DistrictCitizens(props: Props) {\n  const { district, citizens, disabled, districtNames } = props\n  const { updateCitizen, moveCitizen, updateDistrict } = props\n\n  const teamTotal = useMemo(() => citizens.map(citizen => {\n    let value = 0\n    if (citizen.assignedPosition) {\n      value += citizen.basketBallAptitude\n      if (citizen.assignedPosition === citizen.preferredPosition) value += SCORES.matchesPosition\n      if (citizen.preferredPosition === Position.Generalist) value += SCORES.matchesPosition\n      if (citizen.trainingValue) value += citizen.trainingValue\n    }\n    return value\n  }).reduce((t, c) => t + c), [citizens])\n\n  const updateFacility = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (district && updateDistrict) {\n      district.facilities.advancedTraining = e.target.checked\n      updateDistrict(district)\n    }\n  }, [district, updateDistrict])\n\n  return (\n    <div>\n      <br/>\n      {\n        (district) ? \n          <div>\n            <h4>{`District ${district.name} | Last Round Score: ${teamTotal}`}</h4>\n            <CheckBox\n              label={`Advanced Training Facility`}\n              checked={district.facilities.advancedTraining}\n              onChange={updateFacility}\n              disabled={disabled || !district}\n            />\n          </div> : <div />\n      }\n      {citizens.map((citizen, i) => {\n\n        const move = (newDistrict: number | null) => moveCitizen(citizen, newDistrict)\n\n        return (<CitizenCard\n            key={i}\n            citizen={citizen}\n            district={district}\n            update={updateCitizen}\n            disabled={disabled || !updateCitizen}\n            move={move}\n            districtNames={districtNames}\n          />)\n        }\n      )}\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport { District } from '../mockAPI/district'\nimport DistrictCitizens from './DistrictCitizens'\n\ninterface Props {\n  draftResults: District[]\n  updateCitizen: (district: number, citizen: Citizen) => void\n  disabled: boolean\n  districtNames: Map<String, number> \n  moveCitizen: (\n    currentDistrict: number | null,\n    citizen: Citizen,\n    newDistrict: number | null\n  ) => void\n  updateDistrict: (districtNumber: number) => (district: District) => void\n\n}\n\nexport default function DraftResults(props: Props) {\n  const { draftResults, disabled, districtNames } = props\n  const { updateCitizen, moveCitizen, updateDistrict } = props\n\n  return (<div>\n    { draftResults.map((district, i) => {\n        const citizens = district.citizens\n        const citizenUpdate = useCallback(\n          (citizen: Citizen) => { updateCitizen(i, citizen) },\n          [citizens, i]\n        )\n\n        const moveDistrictCitizen = (\n          citizen: Citizen,\n          newDistrict: number | null\n        ) => moveCitizen(i, citizen, newDistrict)\n\n        const districtUpdate = updateDistrict(i)\n\n        return (\n          <DistrictCitizens\n            key={i}\n            citizens={citizens}\n            district={district}\n            updateCitizen={citizenUpdate}\n            disabled={disabled}\n            districtNames={districtNames}\n            moveCitizen={moveDistrictCitizen}\n            updateDistrict={districtUpdate}\n          />\n        )\n      })\n    }\n  </div>)\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst TextField = (props: Props): JSX.Element => {\n  const { label, value, disabled, onChange } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.label}>{label}</div>\n      <input\n        type=\"text\"\n        className={fields.textField}\n        disabled={disabled}\n        value={value}\n        onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface Props {\n  values: number[]\n}\n\nexport default function ScavengerTotals(props: Props){\n  const { values } = props\n  return (\n    <div>\n      {\n        values.map((v, i) => <Button key={i} variant={(i%2 == 0) ? \"light\" : \"dark\"}> { v } </Button>)\n\n      }\n    </div>\n  )\n}\n","export default function randomFromList<Type>(list: Type[]): Type {\n  return list[Math.floor(Math.random() * list.length)]\n}\n","import randomFromList from \"../functions/randomFromList\"\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfunction getNames(amount: number): string[]{\n  const names: Set<string> = new Set()\n\n  while(names.size < amount){\n    const last = randomFromList(NAMES)\n    const first = LETTERS.charAt(Math.floor(Math.random() * LETTERS.length))\n    names.add(`${first}. ${last}`)\n  }\n\n  return Array.from(names)\n}\n\nconst NAMES = [\n\t'SMITH',\n\t'JOHNSON',\n\t'WILLIAMS',\n\t'JONES',\n\t'BROWN',\n\t'DAVIS',\n\t'MILLER',\n\t'WILSON',\n\t'MOORE',\n\t'TAYLOR',\n\t'ANDERSON',\n\t'THOMAS',\n\t'JACKSON',\n\t'WHITE',\n\t'HARRIS',\n\t'MARTIN',\n\t'THOMPSON',\n\t'GARCIA',\n\t'MARTINEZ',\n\t'ROBINSON',\n\t'CLARK',\n\t'RODRIGUEZ',\n\t'LEWIS',\n\t'LEE',\n\t'WALKER',\n\t'HALL',\n\t'ALLEN',\n\t'YOUNG',\n\t'HERNANDEZ',\n\t'KING',\n\t'WRIGHT',\n\t'LOPEZ',\n\t'HILL',\n\t'SCOTT',\n\t'GREEN',\n\t'ADAMS',\n\t'BAKER',\n\t'GONZALEZ',\n\t'NELSON',\n\t'CARTER',\n\t'MITCHELL',\n\t'PEREZ',\n\t'ROBERTS',\n\t'TURNER',\n\t'PHILLIPS',\n\t'CAMPBELL',\n\t'PARKER',\n\t'EVANS',\n\t'EDWARDS',\n\t'COLLINS',\n\t'STEWART',\n\t'SANCHEZ',\n\t'MORRIS',\n\t'ROGERS',\n\t'REED',\n\t'COOK',\n\t'MORGAN',\n\t'BELL',\n\t'MURPHY',\n\t'BAILEY',\n\t'RIVERA',\n\t'COOPER',\n\t'RICHAR',\n]\nexport default getNames\n","import randomFromList from '../functions/randomFromList';\nimport getNames from './getNames';\nimport { Citizen, POSITIONS, MAX_BASKETBALL_APTITUDE, Assignment } from './citizen';\n\nexport default function createCitizens(amount: number, sorted:boolean = true): Citizen[] {\n  //Sorted by basketball Aptitude\n  const citizens: Citizen[] = getNames(amount).map(name => {\n    const citizen: Citizen = {\n      name: name,\n      basketBallAptitude: Math.ceil(Math.random() * MAX_BASKETBALL_APTITUDE),\n      preferredPosition: randomFromList(POSITIONS),\n      assignment: Assignment.Labor,\n      trainingValue: 0,\n    }\n    return citizen\n  })\n  if(sorted) citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n  return citizens\n}\n","import randomSummation from \"../functions/randomSummation\"\nimport { Assignment, Citizen, Position, SCORES } from \"./citizen\"\nimport createCitizens from \"./createCitizens\"\nimport { District } from \"./district\"\nimport runDraft from \"./runDraft\"\n\nconst SCOUT_NUMBERS = 20\nconst SCOUT_MAX = 40\n\nconst GOVERNORS = 16\nconst INITIAL_CITIZENS = 10\n\nconst ADDITIONAL_CITIZENS = 50\n\nconst GAME_DATA = 'GAME_DATA'\n\nexport const EMPTY_GAME_DATA: GameData = {\n  draft: [],\n  rosters: [],\n  scavengerNumbers: [],\n  extraCitizens: [],\n  scoutNumbers: 0,\n  scoutMax: 0,\n  governors: 0,\n  initialCitizens: 0,\n  additionalCitizens: 0,\n  round: 0,\n  districtNames: new Map<String, number>()\n}\n\nconst EMPTY_ROSTER: Map<Position, Citizen | null> = new Map<Position, Citizen | null>()\nEMPTY_ROSTER.set(Position.Center, null)\n\n\nexport interface GameData {\n  draft: District[]\n  rosters: Map<Position, Citizen | null>[]\n  scavengerNumbers: number[]\n  extraCitizens: Citizen[]\n  scoutNumbers: number\n  scoutMax: number\n  governors: number\n  initialCitizens: number\n  additionalCitizens: number\n  round: number\n  districtNames: Map<String, number>\n}\n\nexport function createAndSetGameData(\n  scoutNumbers: number = SCOUT_NUMBERS,\n  scoutMax: number = SCOUT_MAX,\n  governors: number = GOVERNORS,\n  initialCitizens: number = INITIAL_CITIZENS,\n  additionalCitizens: number = ADDITIONAL_CITIZENS,\n): GameData {\n  const draft = runDraft(governors, initialCitizens)\n  const scavengerNumbers = randomSummation(scoutNumbers, scoutMax)\n  const extraCitizens = createCitizens(additionalCitizens, false)\n  const rosters = draft.map( _ => new Map(EMPTY_ROSTER))\n  const districtNames = new Map<String, number>()\n  draft.forEach((district, i) => districtNames.set(district.name, i))\n  const gameData: GameData = {\n    draft,\n    rosters,\n    scavengerNumbers,\n    extraCitizens,\n    scoutNumbers,\n    scoutMax,\n    governors,\n    initialCitizens,\n    additionalCitizens,\n    round: 0,\n    districtNames,\n  }\n  \n  return updateGameData(gameData)\n}\n\nexport function getOrCreateGameData() {\n  const gameData: string | null = localStorage.getItem(GAME_DATA)\n  const result: GameData = gameData ? JSON.parse(gameData) : createAndSetGameData()\n  //convert objects to maps\n  result.districtNames = new Map(Object.entries(result.districtNames)) as Map<String, number>\n  result.rosters = result.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return result\n}\n\nexport function resetGameData() {\n  const gameData = getOrCreateGameData()\n  return createAndSetGameData(\n    gameData.scoutNumbers,\n    gameData.scoutMax,\n    gameData.governors,\n    gameData.initialCitizens,\n    gameData.additionalCitizens,\n  )\n}\n\nexport function updateGameData(gameData: GameData): GameData {\n  const tempData: any = gameData\n  //handle conversion to objects\n  tempData.rosters = gameData.rosters.map(r => Object.fromEntries(r))\n  tempData.districtNames = Object.fromEntries(gameData.districtNames)\n  localStorage.setItem(GAME_DATA, JSON.stringify(tempData))\n  //Handle conversion back to map\n  gameData.rosters = gameData.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  gameData.districtNames = new Map(Object.entries(gameData.districtNames))\n  return gameData\n}\n\nfunction citizenUpdater(\n  gameData: GameData,\n  district: number,\n  citizen: Citizen\n): GameData {\n  if (gameData.draft.length <= district) {\n    console.log(\"Error updatePositionAssignment: invalid district \", district, gameData)\n    return gameData\n  }\n  if (!gameData.rosters || gameData.rosters.length <= district) {\n    console.log(\"Error updatePositionAssignment: no rosters\", district, gameData)\n    return gameData\n  }\n  const citizens = gameData.draft[district].citizens\n  const roster = gameData.rosters[district]\n  const position = citizen.assignedPosition\n  const oldPlayer = !position ? undefined : roster.get(position)\n  for (let i = 0; i < citizens.length; i++) {\n    if (oldPlayer && oldPlayer.name) {\n      if (citizens[i].name === oldPlayer.name) {\n        citizens[i].assignedPosition = undefined\n      }\n    }\n    if (citizens[i].name === citizen.name) {\n      const oldPosition = citizens[i].assignedPosition\n      if (oldPosition && citizen.assignedPosition !== oldPosition) roster.set(oldPosition, null)\n      citizens[i] = citizen\n    }\n  }\n  if (position) roster.set(position, citizen)\n  \n  return updateGameData(gameData)\n}\n\nexport function updateCitizen(\n  district: number,\n  citizen: Citizen\n): GameData {\n  return citizenUpdater(getOrCreateGameData(), district, citizen)\n}\n\nexport function moveCitizen(\n  currentDistrict: number | null,\n  citizen: Citizen,\n  newDistrict: number | null\n): GameData {\n  const gameData = getOrCreateGameData()\n  if (currentDistrict === null) {\n    const citizens = gameData.extraCitizens\n    gameData.extraCitizens = citizens.filter(c => c.name !== citizen.name)\n  } else {\n    const citizens = gameData.draft[currentDistrict].citizens\n    gameData.draft[currentDistrict].citizens = citizens.filter(c => c.name !== citizen.name)\n    if (citizen.assignedPosition) {\n      const roster = gameData.rosters[currentDistrict]\n      roster.set(citizen.assignedPosition, null)\n      gameData.rosters[currentDistrict] = roster\n    }\n  }\n\n  if (newDistrict !== null) {\n    const citizens = gameData.draft[newDistrict].citizens\n    citizens.push(citizen)\n    citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n    gameData.draft[newDistrict].citizens = citizens\n  }\n\n  return updateGameData(gameData)\n}\n\nexport function progressRound(): GameData {\n  const gameData = getOrCreateGameData()\n  for (let d = 0; d < gameData.draft.length; d++) {\n    const maxTraining =\n      gameData.draft[d].facilities.advancedTraining ? SCORES.advancedFacility : SCORES.basicFacility\n    for (let c = 0; c < gameData.draft[d].citizens.length; c++) {\n      const citizen = gameData.draft[d].citizens[c]\n      let trainingValue = citizen.trainingValue\n      if (citizen.assignment === Assignment.Training) {\n        trainingValue = Math.min(maxTraining, trainingValue + SCORES.trainingOn)\n      } else {\n        trainingValue = Math.max(0, trainingValue + SCORES.trainingOff)\n      }\n      gameData.draft[d].citizens[c].trainingValue = trainingValue\n    }\n  }\n\n  if (gameData.extraCitizens.length < gameData.additionalCitizens) {\n    createCitizens(gameData.additionalCitizens - gameData.extraCitizens.length, false)\n      .forEach(citizen => gameData.extraCitizens.push(citizen))\n  }\n  gameData.round += 1\n  return updateGameData(gameData)\n}\n\nexport function updateDistrictAPI(districtNumber: number, district: District) {\n  const gameData = getOrCreateGameData()\n  gameData.draft[districtNumber] = district\n  return updateGameData(gameData)\n}\n","\nimport { Citizen } from \"./citizen\";\nimport createCitizens from \"./createCitizens\";\nimport createDistrict from \"./createDistrict\";\nimport { District } from \"./district\";\n\nexport default function runDraft(governorCount: number, citizensPerGovernor: number): District[]{\n  const citizens = createCitizens(governorCount*citizensPerGovernor)\n  const results: Citizen[][] = []\n  for(let i=0; i<governorCount; i++){\n    results.push([])\n  }\n  let round = 0\n  \n  while (round < citizensPerGovernor) {\n    if (round%2 == 0) {\n      for(let i=0; i<governorCount; i++) {\n        results[i].push(citizens[round*governorCount + i])\n      }\n    } else {\n      let j = 0\n      for(let i=governorCount - 1; i >= 0; i--) {\n        results[i].push(citizens[round*governorCount + j])\n        j++\n      }\n    }\n    round++\n  }\n  return results.map((cs, index) => createDistrict(cs, `${index + 137}`))\n}\n","import { Citizen } from \"./citizen\";\nimport { District } from \"./district\";\n\nexport default function createDistrict(citizens: Citizen[], name: String): District {\n  return {\n    name: name,\n    citizens: citizens,\n    facilities: {\n      advancedTraining: false,\n    },\n  }\n}\n","export default function randomSummation(cards: number, max: number) {\n  const result: number[] = []\n  let current = 0\n  while (result.length < cards) {\n    current = current + Math.ceil(Math.random() * max)\n    result.push(current)\n  }\n  return result\n}\n","import React, { useCallback, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport DraftResults from './display/DraftResults';\nimport TextField from './display/TextField';\nimport ScavengerTotals from './display/ScavengerTotals';\nimport {\n  getOrCreateGameData,\n  resetGameData,\n  updateGameData,\n  updateCitizen,\n  progressRound,\n  moveCitizen,\n  updateDistrictAPI,\n} from './mockAPI/localStorage';\nimport DistrictCitizens from './display/DistrictCitizens';\nimport { Citizen } from './mockAPI/citizen';\nimport { OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap';\nimport app from \"./app.module.css\"\nimport { District } from './mockAPI/district';\n\n\n//Change these to change output\n\nfunction onChangeGameDataBuilder(\n  value: string,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  updateStore: (x: number) => void,\n  writeStore: () => void,\n): ((e: React.ChangeEvent<HTMLInputElement>) => void) {\n  return useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) { setValue(e.target.value) }\n    const parsed = Number(e.target.value)\n    if (Number.isInteger(parsed) && parsed > 0) {\n      updateStore(parsed)\n      writeStore()\n    }\n  }, [value, setValue, updateStore, writeStore])\n}\n\nfunction App() {\n  const [showReset, setShowReset] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [gameData, setGameData] = useState(getOrCreateGameData())\n  const [scoutNumbers, setScoutNumbers] = useState(gameData.scoutNumbers.toString())\n  const [scoutMax, setScoutMax] = useState(gameData.scoutMax.toString())\n  const [governors, setGovernors] = useState(gameData.governors.toString())\n  const [initialCitizens, setInitialCitizens] = useState(gameData.initialCitizens.toString())\n  const [\n    additionalCitizens, setAdditionalCitizens\n  ] = useState(gameData.additionalCitizens.toString())\n\n  const resetData = useCallback(() => {\n    //For when using actual API\n    setDisabled(true)\n    setGameData(resetGameData())\n    setDisabled(false)\n  }, [resetGameData])\n\n  const updateCitizenData = useCallback(\n    (district: number, citizen: Citizen) => {\n      setDisabled(true)\n      setGameData(updateCitizen(district, citizen))\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  const citizenMover = useCallback((\n    currentDistrict: number | null,\n    citizen: Citizen,\n    newDistrict: number | null\n  ) => {\n    setDisabled(true)\n    setGameData(moveCitizen(currentDistrict, citizen, newDistrict))\n    setDisabled(false)\n  }, [moveCitizen])\n\n  const draftCitizen =\n    (citizen: Citizen, newDistrict: number | null) => citizenMover(null, citizen, newDistrict)\n\n  const nextRound = useCallback(\n    () => {\n      setDisabled(true)\n      setGameData(progressRound())\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  function updateScoutNumbers(x: number) { gameData.scoutNumbers = x }\n  function updateScoutMax(x: number) { gameData.scoutMax = x }\n  function updateGovernors(x: number) { gameData.governors = x }\n  function updateInitialCitizens(x: number) { gameData.initialCitizens = x }\n  function updateAdditionalCitizens(x: number) { gameData.additionalCitizens = x }\n\n  function updateData(){\n    //For when using actual API\n    setDisabled(true)\n    setGameData(updateGameData(gameData))\n    setDisabled(false)\n  }\n\n  const updateDistrict = (districtNumber: number, district: District) => {\n    setDisabled(true)\n    setGameData(updateDistrictAPI(districtNumber, district))\n    setDisabled(false)\n  }\n\n  const districtUpdater = (districtNumber: number) => {\n    return (district: District) => updateDistrict(districtNumber, district)\n  }\n\n  const changeScoutNumbers = onChangeGameDataBuilder(\n    scoutNumbers, setScoutNumbers, updateScoutNumbers, updateData\n  )\n  const changeScoutMax = onChangeGameDataBuilder(\n    scoutMax, setScoutMax, updateScoutMax, updateData\n  )\n  const changeGovernors = onChangeGameDataBuilder(\n    governors, setGovernors, updateGovernors, updateData\n  )\n  const changeInitialCitizens = onChangeGameDataBuilder(\n    initialCitizens, setInitialCitizens, updateInitialCitizens, updateData\n  )\n  const changeAdditionalCitizens = onChangeGameDataBuilder(\n    additionalCitizens, setAdditionalCitizens, updateAdditionalCitizens, updateData\n  )\n\n  const clickReset = useCallback(() => setShowReset(!showReset), [showReset, setShowReset])\n\n  const confirmReset = (p: TooltipProps) => (\n    <Tooltip {...p}> {\n      <div>\n        <h1>{`Are you sure you want to Reset?`}</h1>\n        <h3>{`All data will be lost`}</h3>\n        <Button variant='danger' onClick={resetData}>{`Yes, Reset the Game`}</Button>\n      </div>\n    } </Tooltip>\n  )\n\n  return (\n    <div className={app.App}>\n      <h3>{`Configuration - Scroll to bottom to reset`}</h3>\n      <TextField\n        label={\"Total Scavenger Values\"}\n        value={scoutNumbers}\n        onChange={changeScoutNumbers}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Max Scavenger Value\"}\n        value={scoutMax}\n        onChange={changeScoutMax}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Governors\"}\n        value={governors}\n        onChange={changeGovernors}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Initial Citizens per Governor\"}\n        value={initialCitizens}\n        onChange={changeInitialCitizens}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Total Additional Citizens\"}\n        value={additionalCitizens}\n        onChange={changeAdditionalCitizens}\n        disabled={disabled}\n      />\n      <h3>{`Current Round is ${gameData.round}`}</h3>\n      <div className={app.width25Percent}>\n        <Button variant='warning' disabled={disabled} onClick={nextRound}>\n          {`Progress Round`}\n        </Button>\n      </div>\n      <h3>Scavenger Values</h3>\n      <ScavengerTotals values={gameData.scavengerNumbers || []} />\n      <br/>\n      <h3>Draft Results</h3>\n      <DraftResults\n        draftResults={gameData.draft}\n        updateCitizen={updateCitizenData}\n        districtNames={gameData.districtNames}\n        disabled={disabled}\n        moveCitizen={citizenMover}\n        updateDistrict={districtUpdater}\n      />\n\n      <br/>\n      <h3>Additional Citizens</h3>\n      <DistrictCitizens\n        citizens={gameData.extraCitizens}\n        districtNames={gameData.districtNames}\n        moveCitizen={draftCitizen}\n        disabled={disabled}\n      />\n      <OverlayTrigger\n        placement='top'\n        overlay={confirmReset}\n        delay={{ show: 250, hide: 400 }}\n      >\n        <Button disabled={disabled} variant='warning' onClick={clickReset}>Reset Game</Button>\n      </OverlayTrigger>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fields_container__1E8Zb\",\"label\":\"fields_label__2ZHJD\",\"checkBox\":\"fields_checkBox__1dq0H\",\"textField\":\"fields_textField__1EM4s\",\"radioNoWrap\":\"fields_radioNoWrap__GwVEq\",\"radioOption\":\"fields_radioOption__2P4VG\",\"radioToggle\":\"fields_radioToggle__2L57R\",\"left\":\"fields_left__1C3eH\"};"],"sourceRoot":""}