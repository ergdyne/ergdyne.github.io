{"version":3,"sources":["mockAPI/citizen.tsx","display/CitizenCard.tsx","display/DistrictCitizens.tsx","display/DraftResults.tsx","display/TextField.tsx","display/ScavengerTotals.tsx","functions/randomFromList.tsx","mockAPI/getNames.tsx","mockAPI/createCitizens.tsx","mockAPI/localStorage.tsx","mockAPI/runDraft.tsx","functions/randomSummation.tsx","App.tsx","index.tsx","display/fields.module.css"],"names":["Position","Assignment","POSITIONS","Center","Generalist","PointGuard","PowerForward","ShootingGuard","SmallForward","MAX_BASKETBALL_APTITUDE","displayPreferred","position","CitizenCard","props","citizen","react_default","a","createElement","concat","name","assignment","result","basketBallAptitude","assignedPosition","preferredPosition","aboutCitizen","DistrictCitizens","districtNumber","citizens","map","i","key","DraftResults","draftResults","TextField","label","value","disabled","onChange","className","fields","container","type","textField","ScavengerTotals","values","v","Button","variant","randomFromList","list","Math","floor","random","length","LETTERS","NAMES","getNames","amount","names","Set","size","last","first","charAt","add","Array","from","createCitizens","sorted","arguments","undefined","ceil","Labor","sort","b","SCOUT_NUMBERS","SCOUT_MAX","GOVERNORS","INITIAL_CITIZENS","ADDITIONAL_CITIZENS","GAME_DATA","EMPTY_ROSTER","Map","createAndSetGameData","scoutNumbers","scoutMax","governors","initialCitizens","additionalCitizens","draft","governorCount","citizensPerGovernor","results","push","round","j","runDraft","scavengerNumbers","cards","max","current","randomSummation","extraCitizens","rosters","_","updateGameData","getOrCreateGameData","gameData","localStorage","getItem","JSON","parse","r","Object","entries","resetGameData","tempData","fromEntries","setItem","stringify","updatePositionAssignment","district","console","log","roster","oldPlayer","get","Training","set","onChangeGameDataBuilder","setValue","updateStore","writeStore","useCallback","e","target","parsed","Number","isInteger","App","_useState","useState","_useState2","slicedToArray","setDisabled","_useState3","_useState4","setGameData","_useState5","toString","_useState6","setScoutNumbers","_useState7","_useState8","setScoutMax","_useState9","_useState10","setGovernors","_useState11","_useState12","setInitialCitizens","_useState13","_useState14","setAdditionalCitizens","resetData","updateData","changeScoutNumbers","x","changeScoutMax","changeGovernors","changeInitialCitizens","changeAdditionalCitizens","onClick","display_TextField","ReactDOM","render","StrictMode","src_App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bfeb1a83.chunk.js","sourcesContent":["export enum Position {\n  PointGuard = 'Point Guard',\n  ShootingGuard = 'Shooting Guard',\n  SmallForward = 'Small Forward',\n  PowerForward = 'Power Forward',\n  Center = 'Center',\n  Generalist = 'Generalist',\n}\n\nexport const POSITIONS: Position[] = [\n  Position.Center,\n  Position.Generalist,\n  Position.PointGuard,\n  Position.PowerForward,\n  Position.ShootingGuard,\n  Position.SmallForward,\n]\n\nexport enum Assignment {\n  Labor = 'Labor',\n  Scavenger = 'Scavenger',\n  Training = 'Training',\n}\n\nexport const MAX_BASKETBALL_APTITUDE = 100\n\nexport interface Citizen {\n  name: String\n  preferredPosition: Position\n  basketBallAptitude: number\n  assignment: Assignment\n  assignedPosition?: Position\n  //Store other information such as injury and current skill and UID\n}\n","import React from 'react'\nimport { Citizen, MAX_BASKETBALL_APTITUDE, Position } from '../mockAPI/citizen'\n\ninterface Props {\n  citizen: Citizen\n}\n\nfunction displayPreferred(position: Position): string {\n  return (position == Position.Generalist) ? 'any position' : position\n}\n\nfunction aboutCitizen(citizen: Citizen): string {\n  let result = `Basketball aptitude of ${citizen.basketBallAptitude}. `\n  \n  if (citizen.assignedPosition) {\n    result = result + `They are playing ${citizen.assignedPosition}, `\n    if (\n      citizen.assignedPosition == citizen.preferredPosition ||\n      citizen.preferredPosition == Position.Generalist\n    ) {\n      result = result + 'and '\n    } else {\n      result = result + 'but '\n    }\n    result = result + `they prefer playing ${citizen.preferredPosition}`\n  } else {\n    result = result + `They are currently working in ${citizen.assignment}. `\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result +\n        `They would prefer to be playing ${displayPreferred(citizen.preferredPosition)}.`\n    } else {\n      result = result +\n        `They could play ${displayPreferred(citizen.preferredPosition)}, but would rather not.`\n    }\n  }\n  return result\n}\n\nexport default function CitizenCard(props: Props) {\n  const { citizen} = props\n  return (<div>\n    <h5>{`${citizen.name} - ${citizen.assignment}`}</h5>\n    <p> {aboutCitizen(citizen)} </p>\n  </div>)\n}\n","import React from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport CitizenCard from './CitizenCard'\n\ninterface Props {\n  citizens: Citizen[]\n  districtNumber?: number\n}\n\nexport default function DistrictCitizens(props: Props) {\n  const { districtNumber, citizens } = props\n  return (<div>\n    <br/>\n    {(districtNumber) ? <h4>{`District ${districtNumber}`}</h4> : <div/>}\n    {citizens.map((citizen, i) => <CitizenCard key={i} citizen={citizen}/>)}\n  </div>)\n}\n","import React from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport DistrictCitizens from './DistrictCitizens'\n\ninterface Props {\n  draftResults: Citizen[][]\n}\n\nexport default function DraftResults(props: Props) {\n  return (<div>\n    { props.draftResults.map((citizens, i) => <DistrictCitizens\n        key = {i}\n        citizens = {citizens}\n        districtNumber = {i + 137}\n      />)\n    }\n  </div>)\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst TextField = (props: Props): JSX.Element => {\n  const { label, value, disabled, onChange } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.label}>{label}</div>\n      <input\n        type=\"text\"\n        className={fields.textField}\n        disabled={disabled}\n        value={value}\n        onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface Props {\n  values: number[]\n}\n\nexport default function ScavengerTotals(props: Props){\n  const { values } = props\n  return (\n    <div>\n      {\n        values.map((v, i) => <Button key={i} variant={(i%2 == 0) ? \"light\" : \"dark\"}> { v } </Button>)\n\n      }\n    </div>\n  )\n}\n","export default function randomFromList<Type>(list: Type[]): Type {\n  return list[Math.floor(Math.random() * list.length)]\n}\n","import randomFromList from \"../functions/randomFromList\"\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfunction getNames(amount: number): string[]{\n  const names: Set<string> = new Set()\n\n  while(names.size < amount){\n    const last = randomFromList(NAMES)\n    const first = LETTERS.charAt(Math.floor(Math.random() * LETTERS.length))\n    names.add(`${first}. ${last}`)\n  }\n\n  return Array.from(names)\n}\n\nconst NAMES = [\n\t'SMITH',\n\t'JOHNSON',\n\t'WILLIAMS',\n\t'JONES',\n\t'BROWN',\n\t'DAVIS',\n\t'MILLER',\n\t'WILSON',\n\t'MOORE',\n\t'TAYLOR',\n\t'ANDERSON',\n\t'THOMAS',\n\t'JACKSON',\n\t'WHITE',\n\t'HARRIS',\n\t'MARTIN',\n\t'THOMPSON',\n\t'GARCIA',\n\t'MARTINEZ',\n\t'ROBINSON',\n\t'CLARK',\n\t'RODRIGUEZ',\n\t'LEWIS',\n\t'LEE',\n\t'WALKER',\n\t'HALL',\n\t'ALLEN',\n\t'YOUNG',\n\t'HERNANDEZ',\n\t'KING',\n\t'WRIGHT',\n\t'LOPEZ',\n\t'HILL',\n\t'SCOTT',\n\t'GREEN',\n\t'ADAMS',\n\t'BAKER',\n\t'GONZALEZ',\n\t'NELSON',\n\t'CARTER',\n\t'MITCHELL',\n\t'PEREZ',\n\t'ROBERTS',\n\t'TURNER',\n\t'PHILLIPS',\n\t'CAMPBELL',\n\t'PARKER',\n\t'EVANS',\n\t'EDWARDS',\n\t'COLLINS',\n\t'STEWART',\n\t'SANCHEZ',\n\t'MORRIS',\n\t'ROGERS',\n\t'REED',\n\t'COOK',\n\t'MORGAN',\n\t'BELL',\n\t'MURPHY',\n\t'BAILEY',\n\t'RIVERA',\n\t'COOPER',\n\t'RICHAR',\n]\nexport default getNames\n","import randomFromList from '../functions/randomFromList';\nimport getNames from './getNames';\nimport { Citizen, POSITIONS, MAX_BASKETBALL_APTITUDE, Assignment } from './citizen';\n\nexport default function createCitizens(amount: number, sorted:boolean = true): Citizen[] {\n  //Sorted by basketball Aptitude\n  const citizens: Citizen[] = getNames(amount).map(name => {\n    const citizen: Citizen = {\n      name: name,\n      basketBallAptitude: Math.ceil(Math.random() * MAX_BASKETBALL_APTITUDE),\n      preferredPosition: randomFromList(POSITIONS),\n      assignment: Assignment.Labor,\n    }\n    return citizen\n  })\n  if(sorted) citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n  return citizens\n}\n","import { debug } from \"console\"\nimport randomSummation from \"../functions/randomSummation\"\nimport { Assignment, Citizen, Position } from \"./citizen\"\nimport createCitizens from \"./createCitizens\"\nimport runDraft from \"./runDraft\"\n\nconst SCOUT_NUMBERS = 20\nconst SCOUT_MAX = 40\n\nconst GOVERNORS = 16\nconst INITIAL_CITIZENS = 10\n\nconst ADDITIONAL_CITIZENS = 20\n\nconst GAME_DATA = 'GAME_DATA'\n\nexport const EMPTY_GAME_DATA: GameData = {\n  draft: [[]],\n  rosters: [],\n  scavengerNumbers: [],\n  extraCitizens: [],\n  scoutNumbers: 0,\n  scoutMax: 0,\n  governors: 0,\n  initialCitizens: 0,\n  additionalCitizens: 0,\n}\n\nconst EMPTY_ROSTER: Map<Position, Citizen | null> = new Map<Position, Citizen | null>()\nEMPTY_ROSTER.set(Position.Center, null)\n\n\nexport interface GameData {\n  draft: Citizen[][]\n  rosters: Map<Position, Citizen | null>[]\n  scavengerNumbers: number[]\n  extraCitizens: Citizen[]\n  scoutNumbers: number\n  scoutMax: number\n  governors: number\n  initialCitizens: number\n  additionalCitizens: number\n}\n\nexport function createAndSetGameData(\n  scoutNumbers: number = SCOUT_NUMBERS,\n  scoutMax: number = SCOUT_MAX,\n  governors: number = GOVERNORS,\n  initialCitizens: number = INITIAL_CITIZENS,\n  additionalCitizens: number = ADDITIONAL_CITIZENS,\n): GameData {\n  const draft = runDraft(governors, initialCitizens)\n  const scavengerNumbers = randomSummation(scoutNumbers, scoutMax)\n  const extraCitizens = createCitizens(additionalCitizens, false)\n  const rosters = draft.map( _ => new Map(EMPTY_ROSTER))\n  const gameData: GameData = {\n    draft,\n    rosters,\n    scavengerNumbers,\n    extraCitizens,\n    scoutNumbers,\n    scoutMax,\n    governors,\n    initialCitizens,\n    additionalCitizens\n  }\n  \n  return updateGameData(gameData)\n}\n\nexport function getOrCreateGameData() {\n  const gameData: string | null = localStorage.getItem(GAME_DATA)\n  const result: GameData = gameData ? JSON.parse(gameData) : createAndSetGameData()\n  //convert objects to maps\n  result.rosters = result.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return result\n}\n\nexport function resetGameData() {\n  const gameData = getOrCreateGameData()\n  return createAndSetGameData(\n    gameData.scoutNumbers,\n    gameData.scoutMax,\n    gameData.governors,\n    gameData.initialCitizens,\n    gameData.additionalCitizens,\n  )\n}\n\nexport function updateGameData(gameData: GameData): GameData {\n  const tempData: any = gameData\n  //handle conversion to objects\n  tempData.rosters = gameData.rosters.map(r => Object.fromEntries(r))\n  localStorage.setItem(GAME_DATA, JSON.stringify(tempData))\n  //Handle conversion back to map\n  gameData.rosters = gameData.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return gameData\n}\n\nexport function updatePositionAssignment(\n  gameData: GameData,\n  district: number,\n  citizen: Citizen,\n  position: Position\n): GameData {\n  if (gameData.draft.length <= district) {\n    console.log(\"Error updatePositionAssignment: invalid district \", district, gameData)\n    return gameData\n  }\n  if (!gameData.rosters || gameData.rosters.length <= district) {\n    console.log(\"Error updatePositionAssignment: no rosters\", district, gameData)\n    return gameData\n  }\n  const citizens = gameData.draft[district]\n  const roster = gameData.rosters[district]\n  const oldPlayer = roster.get(position)\n\n  for(let i = 0; i < citizens.length; i++) {\n    if (oldPlayer) {\n      if (citizens[i].name === oldPlayer.name) {\n        citizens[i].assignedPosition = undefined\n      }\n    }\n    if (citizens[i].name === citizen.name) {\n      citizens[i].assignedPosition = position\n      citizens[i].assignment = Assignment.Training\n    }\n  }\n  roster.set(position, citizen)\n  updateGameData(gameData)\n  return gameData\n}\n","\nimport { Citizen } from \"./citizen\";\nimport createCitizens from \"./createCitizens\";\n\nexport default function runDraft(governorCount: number, citizensPerGovernor: number): Citizen[][]{\n  const citizens = createCitizens(governorCount*citizensPerGovernor)\n  const results: Citizen[][] = []\n  for(let i=0; i<governorCount; i++){\n    results.push([])\n  }\n  let round = 0\n  \n  while (round < citizensPerGovernor) {\n    if (round%2 == 0) {\n      for(let i=0; i<governorCount; i++) {\n        results[i].push(citizens[round*governorCount + i])\n      }\n    } else {\n      let j = 0\n      for(let i=governorCount - 1; i >= 0; i--) {\n        results[i].push(citizens[round*governorCount + j])\n        j++\n      }\n    }\n    round++\n  }\n  return results\n}\n","export default function randomSummation(cards: number, max: number) {\n  const result: number[] = []\n  let current = 0\n  while (result.length < cards) {\n    current = current + Math.ceil(Math.random() * max)\n    result.push(current)\n  }\n  return result\n}\n","import React, { useCallback, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport './App.css';\nimport DraftResults from './display/DraftResults';\nimport TextField from './display/TextField';\nimport ScavengerTotals from './display/ScavengerTotals';\nimport { getOrCreateGameData, resetGameData, updateGameData, updatePositionAssignment } from './mockAPI/localStorage';\nimport DistrictCitizens from './display/DistrictCitizens';\nimport { Position } from './mockAPI/citizen';\n\n\n//Change these to change output\n\nfunction onChangeGameDataBuilder(\n  value: string,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  updateStore: (x: number) => void,\n  writeStore: () => void,\n): ((e: React.ChangeEvent<HTMLInputElement>) => void) {\n  return useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) { setValue(e.target.value) }\n    const parsed = Number(e.target.value)\n    if (Number.isInteger(parsed) && parsed > 0) {\n      updateStore(parsed)\n      writeStore()\n    }\n  }, [value, setValue, updateStore, writeStore])\n}\n\nfunction App() {\n  const [disabled, setDisabled] = useState(false)\n  const [gameData, setGameData] = useState(getOrCreateGameData())\n  const [scoutNumbers, setScoutNumbers] = useState(gameData.scoutNumbers.toString())\n  const [scoutMax, setScoutMax] = useState(gameData.scoutMax.toString())\n  const [governors, setGovernors] = useState(gameData.governors.toString())\n  const [initialCitizens, setInitialCitizens] = useState(gameData.initialCitizens.toString())\n  const [\n    additionalCitizens, setAdditionalCitizens\n  ] = useState(gameData.additionalCitizens.toString())\n\n  const resetData = useCallback(() => {\n    //For when using actual API\n    setDisabled(true)\n    setGameData(resetGameData())\n    setDisabled(false)\n  }, [resetGameData])\n\n  function updateScoutNumbers(x: number) { gameData.scoutNumbers = x }\n  function updateScoutMax(x: number) { gameData.scoutMax = x }\n  function updateGovernors(x: number) { gameData.governors = x }\n  function updateInitialCitizens(x: number) { gameData.initialCitizens = x }\n  function updateAdditionalCitizens(x: number) { gameData.additionalCitizens = x }\n\n  function updateData(){\n    //For when using actual API\n    setDisabled(true)\n    setGameData(updateGameData(gameData))\n    setDisabled(false)\n  }\n\n  const changeScoutNumbers = onChangeGameDataBuilder(\n    scoutNumbers, setScoutNumbers, updateScoutNumbers, updateData\n  )\n  const changeScoutMax = onChangeGameDataBuilder(\n    scoutMax, setScoutMax, updateScoutMax, updateData\n  )\n  const changeGovernors = onChangeGameDataBuilder(\n    governors, setGovernors, updateGovernors, updateData\n  )\n  const changeInitialCitizens = onChangeGameDataBuilder(\n    initialCitizens, setInitialCitizens, updateInitialCitizens, updateData\n  )\n  const changeAdditionalCitizens = onChangeGameDataBuilder(\n    additionalCitizens, setAdditionalCitizens, updateAdditionalCitizens, updateData\n  )\n\n  updatePositionAssignment(gameData, 0, gameData.draft[0][0], Position.Center)\n  updatePositionAssignment(gameData, 0, gameData.draft[0][1], Position.Center)\n  updatePositionAssignment(gameData, 0, gameData.draft[0][2], Position.ShootingGuard)\n\n  return (\n    <div className=\"App\">\n      <Button disabled={disabled} variant='warning' onClick={resetData}>Reset Game</Button>\n      <h3>Configuration</h3>\n      <TextField\n        label={\"Total Scavenger Values\"}\n        value={scoutNumbers}\n        onChange={changeScoutNumbers}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Max Scavenger Value\"}\n        value={scoutMax}\n        onChange={changeScoutMax}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Governors\"}\n        value={governors}\n        onChange={changeGovernors}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Initial Citizens per Governor\"}\n        value={initialCitizens}\n        onChange={changeInitialCitizens}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Total Additional Citizens\"}\n        value={additionalCitizens}\n        onChange={changeAdditionalCitizens}\n        disabled={disabled}\n      />\n      <h3>Scavenger Values</h3>\n      <ScavengerTotals values={gameData.scavengerNumbers || []} />\n      <br/>\n      <h3>Draft Results</h3>\n      <DraftResults draftResults={gameData.draft} />\n\n      <br/>\n      <h3>Additional Citizens</h3>\n      <DistrictCitizens citizens={gameData.extraCitizens}/>\n\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fields_container__1E8Zb\",\"label\":\"fields_label__2ZHJD\",\"textField\":\"fields_textField__1EM4s\"};"],"sourceRoot":""}