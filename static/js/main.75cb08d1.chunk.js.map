{"version":3,"sources":["display/citizencard.module.css","app.module.css","mockAPI/citizen.tsx","display/RadioField.tsx","display/CitizenCard.tsx","display/DistrictCitizens.tsx","display/DraftResults.tsx","display/TextField.tsx","display/ScavengerTotals.tsx","functions/randomFromList.tsx","mockAPI/getNames.tsx","mockAPI/createCitizens.tsx","mockAPI/localStorage.tsx","mockAPI/runDraft.tsx","mockAPI/createDistrict.tsx","functions/randomSummation.tsx","App.tsx","index.tsx","display/fields.module.css"],"names":["module","exports","section","name","score","citizen","App","width25Percent","Position","SCORES","trainingOn","trainingOff","matchesPosition","generalist","basicFacility","advancedFacility","Assignment","POSITIONS","Center","Generalist","PointGuard","PowerForward","ShootingGuard","SmallForward","POSITION_OPTIONS","filter","x","map","label","value","ASSIGNMENT_OPTIONS","Labor","Scavenger","Training","MAX_BASKETBALL_APTITUDE","RadioOption","props","option","onChange","preferedValue","disabled","onClick","useCallback","selected","variant","react_default","a","createElement","Button","className","fields","radioToggle","RadioField","options","inline","concat","container","radioNoWrap","left","Fragment","RadioField_RadioOption","key","displayPreferred","position","CitizenCard","update","updatePosition","assignedPosition","updateWorkAssignment","assignment","citizencard","OverlayTrigger","placement","delay","show","hide","overlay","p","Tooltip","result","preferredPosition","basketBallAptitude","aboutCitizen","display_RadioField","DistrictCitizens","district","citizens","updateCitizen","teamTotal","trainingValue","reduce","t","c","i","DraftResults","draftResults","citizenUpdate","TextField","type","textField","ScavengerTotals","values","v","randomFromList","list","Math","floor","random","length","LETTERS","NAMES","getNames","amount","names","Set","size","last","first","charAt","add","Array","from","createCitizens","sorted","arguments","undefined","ceil","sort","b","SCOUT_NUMBERS","SCOUT_MAX","GOVERNORS","INITIAL_CITIZENS","ADDITIONAL_CITIZENS","GAME_DATA","EMPTY_ROSTER","Map","createAndSetGameData","scoutNumbers","scoutMax","governors","initialCitizens","additionalCitizens","draft","governorCount","citizensPerGovernor","results","push","round","j","cs","index","facilities","advancedTraining","runDraft","scavengerNumbers","cards","max","current","randomSummation","extraCitizens","rosters","_","updateGameData","getOrCreateGameData","gameData","localStorage","getItem","JSON","parse","r","Object","entries","resetGameData","tempData","fromEntries","setItem","stringify","console","log","roster","oldPlayer","get","oldPosition","set","citizenUpdater","onChangeGameDataBuilder","setValue","updateStore","writeStore","e","target","parsed","Number","isInteger","_useState","useState","_useState2","slicedToArray","showReset","setShowReset","_useState3","_useState4","setDisabled","_useState5","_useState6","setGameData","_useState7","toString","_useState8","setScoutNumbers","_useState9","_useState10","setScoutMax","_useState11","_useState12","setGovernors","_useState13","_useState14","setInitialCitizens","_useState15","_useState16","setAdditionalCitizens","resetData","updateCitizenData","nextRound","d","maxTraining","min","progressRound","updateData","changeScoutNumbers","changeScoutMax","changeGovernors","changeInitialCitizens","changeAdditionalCitizens","clickReset","app","display_TextField","ReactDOM","render","StrictMode","src_App","document","getElementById","radioOption"],"mappings":"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","file":"static/js/main.75cb08d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"citizencard_section__jcf3v\",\"name\":\"citizencard_name__2RzKv\",\"score\":\"citizencard_score__zJg_7\",\"citizen\":\"citizencard_citizen__OVY-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__2_Cd6\",\"width25Percent\":\"app_width25Percent__2iD0f\"};","\nimport Option from \"../types/Option\"\n\nexport const SCORES = {\n  trainingOn: 2,\n  trainingOff: -1,\n  matchesPosition: 10,\n  generalist: 5,\n  basicFacility: 5,\n  advancedFacility: 10,\n}\n\nexport enum Position {\n  PointGuard = 'Point Guard',\n  ShootingGuard = 'Shooting Guard',\n  SmallForward = 'Small Forward',\n  PowerForward = 'Power Forward',\n  Center = 'Center',\n  Generalist = 'Generalist',\n}\n\nexport const POSITIONS: Position[] = [\n  Position.Center,\n  Position.Generalist,\n  Position.PointGuard,\n  Position.PowerForward,\n  Position.ShootingGuard,\n  Position.SmallForward,\n]\n\nexport const POSITION_OPTIONS: Option[] = POSITIONS.filter(\n  x => x !== Position.Generalist\n).map(x => { return { label: x, value: x } })\n\nexport enum Assignment {\n  Labor = 'Labor',\n  Scavenger = 'Scavenger',\n  Training = 'Training',\n}\n\nexport const ASSIGNMENTS: Assignment[] = [\n  Assignment.Labor,\n  Assignment.Scavenger,\n  Assignment.Training\n]\n\nexport const ASSIGNMENT_OPTIONS: Option[] = ASSIGNMENTS.map(x => { return { label: x, value: x } })\n\nexport const MAX_BASKETBALL_APTITUDE = 100\n\nexport interface Citizen {\n  name: String\n  preferredPosition: Position\n  basketBallAptitude: number\n  assignment: Assignment\n  trainingValue: number\n  assignedPosition?: Position\n  //Store other information such as injury and current skill and UID\n}\n","import React, { useCallback } from \"react\"\nimport Button from 'react-bootstrap/Button'\nimport Option from \"../types/Option\"\nimport fields from \"./fields.module.css\"\n\ninterface OptionProps {\n  option: Option\n  onChange: (value: string) => void\n  value?: string\n  preferedValue?: string\n  disabled?: boolean\n}\n\ninterface Props {\n  options: Option[]\n  onChange: (value: string) => void\n  disabled?: boolean\n  label?: string\n  inline?: boolean\n  value?: string\n  preferedValue?: string\n}\n\nconst RadioOption = (props: OptionProps): JSX.Element => {\n  const { option, value, onChange, preferedValue, disabled } = props\n  const onClick = useCallback(() => { onChange(option.value) }, [option, onChange])\n  const selected = option.value === value\n  const variant = selected ? \"warning\" : (preferedValue === option.value ? \"secondary\" : \"dark\")\n\n  return (\n    <Button\n      className={fields.radioToggle}\n      onClick={onClick}\n      disabled={selected || disabled}\n      variant={variant}\n    >\n      {option.label}  \n    </Button>\n  )\n}\n\nconst RadioField = (props: Props): JSX.Element => {\n  const { value, options, onChange, disabled, label, inline, preferedValue } = props\n  return (\n    <div className={`${fields.container} ${fields.radioNoWrap} ${inline ? fields.left : ''}`}>\n      {label ? <div className={fields.label}>{label}</div> : <></>}\n      { options.map(option => <RadioOption\n          key={option.value}\n          option={option}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          preferedValue={preferedValue}\n        />)\n      }\n    </div>\n  )\n\n}\n\nexport default RadioField\n","import React, { useCallback } from 'react'\nimport {\n  Citizen,\n  Position,\n  Assignment,\n  MAX_BASKETBALL_APTITUDE,\n  POSITION_OPTIONS,\n  ASSIGNMENT_OPTIONS,\n} from '../mockAPI/citizen'\nimport RadioField from './RadioField'\nimport citizencard from \"./citizencard.module.css\"\nimport { Button, OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap'\n\ninterface Props {\n  citizen: Citizen\n  disabled: boolean\n  update?: (c: Citizen) => void\n}\n\nfunction displayPreferred(position: Position): string {\n  return (position == Position.Generalist) ? 'any position' : position\n}\n\nfunction aboutCitizen(citizen: Citizen): string {\n  let result = ``\n  \n  if (citizen.assignedPosition) {\n    result = result + `They are playing ${citizen.assignedPosition}, `\n    if ((\n      citizen.assignedPosition == citizen.preferredPosition ||\n      citizen.preferredPosition == Position.Generalist) &&\n      citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE\n    ) {\n      result = result + 'and '\n    } else {\n      result = result + 'but '\n    }\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result + `they prefer playing ${citizen.preferredPosition}`\n    } else {\n      result = result + `they would rather not.`\n    }\n  } else {\n    result = result + `They are currently working in ${citizen.assignment}. `\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result +\n        `They would prefer to be playing ${displayPreferred(citizen.preferredPosition)}.`\n    } else {\n      result = result +\n        `They could play ${displayPreferred(citizen.preferredPosition)}, but would rather not.`\n    }\n  }\n  return result\n}\n\nexport default function CitizenCard(props: Props) {\n  const { citizen, update, disabled } = props\n\n  const updatePosition = useCallback((position: string | number) => {\n    citizen.assignedPosition = position as Position\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const updateWorkAssignment = useCallback((assignment: string | number) => {\n    citizen.assignment = assignment as Assignment\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const citizenBlurb = (p: TooltipProps) => (\n    <Tooltip {...p}> {aboutCitizen(citizen)} </Tooltip>\n  )\n\n  return (\n    <div className={citizencard.citizen}>\n      <OverlayTrigger\n        placement='right'\n        delay={{ show: 250, hide: 400 }}\n        overlay={citizenBlurb}\n      >\n        <div className={citizencard.section} >\n          <Button className={citizencard.name} variant='dark' > {citizen.name} </Button>\n          <Button className={citizencard.score} variant='dark' >\n            {citizen.basketBallAptitude}\n          </Button>\n        </div>\n      </OverlayTrigger>\n      <RadioField\n        options={ASSIGNMENT_OPTIONS}\n        onChange={updateWorkAssignment}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignment}\n      />\n      <RadioField\n        options={POSITION_OPTIONS}\n        onChange={updatePosition}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignedPosition}\n        preferedValue={citizen.preferredPosition}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Citizen, Position, SCORES } from '../mockAPI/citizen'\nimport { District } from '../mockAPI/district'\nimport CitizenCard from './CitizenCard'\n\ninterface Props {\n  citizens: Citizen[]\n  updateCitizen?: (c: Citizen) => void\n  district?: District\n  disabled?: boolean\n}\n\n\n// Add district title prop with calculation for team score +10 for preferred +5 for generalist\n// Training +2 / week, -1/week, range 0 - (5 or 10 (if advanced facility))\n\nexport default function DistrictCitizens(props: Props) {\n  const { district, citizens, updateCitizen, disabled } = props\n  const teamTotal = citizens.map(citizen => {\n    let value = 0\n    if (citizen.assignedPosition) {\n      value += citizen.basketBallAptitude\n      if (citizen.assignedPosition === citizen.preferredPosition) value += SCORES.matchesPosition\n      if (citizen.preferredPosition === Position.Generalist) value += SCORES.matchesPosition\n      if (citizen.trainingValue) value += citizen.trainingValue\n    }\n    return value\n  }).reduce((t, c) => t + c)\n  return (\n    <div>\n      <br/>\n      {\n        (district) ?\n        <h4>{`District ${district.name} | Last Round Score: ${teamTotal}`}</h4> :\n        <div/>\n      }\n      {citizens.map((citizen, i) => <CitizenCard\n          key={i}\n          citizen={citizen}\n          update={updateCitizen}\n          disabled={disabled || !updateCitizen}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport { District } from '../mockAPI/district'\nimport DistrictCitizens from './DistrictCitizens'\n\ninterface Props {\n  draftResults: District[]\n  updateCitizen: (district: number, citizen: Citizen) => void\n  disabled: boolean\n}\n\nexport default function DraftResults(props: Props) {\n  const { draftResults, updateCitizen, disabled } = props\n  return (<div>\n    { draftResults.map((district, i) => {\n        const citizens = district.citizens\n        const citizenUpdate = useCallback(\n          (citizen: Citizen) => { updateCitizen(i, citizen) },\n          [citizens, i]\n        )\n        return (\n          <DistrictCitizens\n            key={i}\n            citizens={citizens}\n            district={district}\n            updateCitizen={citizenUpdate}\n            disabled={disabled}\n          />\n        )\n      })\n    }\n  </div>)\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst TextField = (props: Props): JSX.Element => {\n  const { label, value, disabled, onChange } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.label}>{label}</div>\n      <input\n        type=\"text\"\n        className={fields.textField}\n        disabled={disabled}\n        value={value}\n        onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface Props {\n  values: number[]\n}\n\nexport default function ScavengerTotals(props: Props){\n  const { values } = props\n  return (\n    <div>\n      {\n        values.map((v, i) => <Button key={i} variant={(i%2 == 0) ? \"light\" : \"dark\"}> { v } </Button>)\n\n      }\n    </div>\n  )\n}\n","export default function randomFromList<Type>(list: Type[]): Type {\n  return list[Math.floor(Math.random() * list.length)]\n}\n","import randomFromList from \"../functions/randomFromList\"\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfunction getNames(amount: number): string[]{\n  const names: Set<string> = new Set()\n\n  while(names.size < amount){\n    const last = randomFromList(NAMES)\n    const first = LETTERS.charAt(Math.floor(Math.random() * LETTERS.length))\n    names.add(`${first}. ${last}`)\n  }\n\n  return Array.from(names)\n}\n\nconst NAMES = [\n\t'SMITH',\n\t'JOHNSON',\n\t'WILLIAMS',\n\t'JONES',\n\t'BROWN',\n\t'DAVIS',\n\t'MILLER',\n\t'WILSON',\n\t'MOORE',\n\t'TAYLOR',\n\t'ANDERSON',\n\t'THOMAS',\n\t'JACKSON',\n\t'WHITE',\n\t'HARRIS',\n\t'MARTIN',\n\t'THOMPSON',\n\t'GARCIA',\n\t'MARTINEZ',\n\t'ROBINSON',\n\t'CLARK',\n\t'RODRIGUEZ',\n\t'LEWIS',\n\t'LEE',\n\t'WALKER',\n\t'HALL',\n\t'ALLEN',\n\t'YOUNG',\n\t'HERNANDEZ',\n\t'KING',\n\t'WRIGHT',\n\t'LOPEZ',\n\t'HILL',\n\t'SCOTT',\n\t'GREEN',\n\t'ADAMS',\n\t'BAKER',\n\t'GONZALEZ',\n\t'NELSON',\n\t'CARTER',\n\t'MITCHELL',\n\t'PEREZ',\n\t'ROBERTS',\n\t'TURNER',\n\t'PHILLIPS',\n\t'CAMPBELL',\n\t'PARKER',\n\t'EVANS',\n\t'EDWARDS',\n\t'COLLINS',\n\t'STEWART',\n\t'SANCHEZ',\n\t'MORRIS',\n\t'ROGERS',\n\t'REED',\n\t'COOK',\n\t'MORGAN',\n\t'BELL',\n\t'MURPHY',\n\t'BAILEY',\n\t'RIVERA',\n\t'COOPER',\n\t'RICHAR',\n]\nexport default getNames\n","import randomFromList from '../functions/randomFromList';\nimport getNames from './getNames';\nimport { Citizen, POSITIONS, MAX_BASKETBALL_APTITUDE, Assignment } from './citizen';\n\nexport default function createCitizens(amount: number, sorted:boolean = true): Citizen[] {\n  //Sorted by basketball Aptitude\n  const citizens: Citizen[] = getNames(amount).map(name => {\n    const citizen: Citizen = {\n      name: name,\n      basketBallAptitude: Math.ceil(Math.random() * MAX_BASKETBALL_APTITUDE),\n      preferredPosition: randomFromList(POSITIONS),\n      assignment: Assignment.Labor,\n      trainingValue: 0,\n    }\n    return citizen\n  })\n  if(sorted) citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n  return citizens\n}\n","import randomSummation from \"../functions/randomSummation\"\nimport { Assignment, Citizen, Position, SCORES } from \"./citizen\"\nimport createCitizens from \"./createCitizens\"\nimport { District } from \"./district\"\nimport runDraft from \"./runDraft\"\n\nconst SCOUT_NUMBERS = 20\nconst SCOUT_MAX = 40\n\nconst GOVERNORS = 16\nconst INITIAL_CITIZENS = 10\n\nconst ADDITIONAL_CITIZENS = 20\n\nconst GAME_DATA = 'GAME_DATA'\n\nexport const EMPTY_GAME_DATA: GameData = {\n  draft: [],\n  rosters: [],\n  scavengerNumbers: [],\n  extraCitizens: [],\n  scoutNumbers: 0,\n  scoutMax: 0,\n  governors: 0,\n  initialCitizens: 0,\n  additionalCitizens: 0,\n  round: 0,\n}\n\nconst EMPTY_ROSTER: Map<Position, Citizen | null> = new Map<Position, Citizen | null>()\nEMPTY_ROSTER.set(Position.Center, null)\n\n\nexport interface GameData {\n  draft: District[]\n  rosters: Map<Position, Citizen | null>[]\n  scavengerNumbers: number[]\n  extraCitizens: Citizen[]\n  scoutNumbers: number\n  scoutMax: number\n  governors: number\n  initialCitizens: number\n  additionalCitizens: number\n  round: number\n}\n\nexport function createAndSetGameData(\n  scoutNumbers: number = SCOUT_NUMBERS,\n  scoutMax: number = SCOUT_MAX,\n  governors: number = GOVERNORS,\n  initialCitizens: number = INITIAL_CITIZENS,\n  additionalCitizens: number = ADDITIONAL_CITIZENS,\n): GameData {\n  const draft = runDraft(governors, initialCitizens)\n  const scavengerNumbers = randomSummation(scoutNumbers, scoutMax)\n  const extraCitizens = createCitizens(additionalCitizens, false)\n  const rosters = draft.map( _ => new Map(EMPTY_ROSTER))\n  const gameData: GameData = {\n    draft,\n    rosters,\n    scavengerNumbers,\n    extraCitizens,\n    scoutNumbers,\n    scoutMax,\n    governors,\n    initialCitizens,\n    additionalCitizens,\n    round: 0,\n  }\n  \n  return updateGameData(gameData)\n}\n\nexport function getOrCreateGameData() {\n  const gameData: string | null = localStorage.getItem(GAME_DATA)\n  const result: GameData = gameData ? JSON.parse(gameData) : createAndSetGameData()\n  //convert objects to maps\n  result.rosters = result.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return result\n}\n\nexport function resetGameData() {\n  const gameData = getOrCreateGameData()\n  return createAndSetGameData(\n    gameData.scoutNumbers,\n    gameData.scoutMax,\n    gameData.governors,\n    gameData.initialCitizens,\n    gameData.additionalCitizens,\n  )\n}\n\nexport function updateGameData(gameData: GameData): GameData {\n  const tempData: any = gameData\n  //handle conversion to objects\n  tempData.rosters = gameData.rosters.map(r => Object.fromEntries(r))\n  localStorage.setItem(GAME_DATA, JSON.stringify(tempData))\n  //Handle conversion back to map\n  gameData.rosters = gameData.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return gameData\n}\n\nfunction citizenUpdater(\n  gameData: GameData,\n  district: number,\n  citizen: Citizen\n): GameData {\n  if (gameData.draft.length <= district) {\n    console.log(\"Error updatePositionAssignment: invalid district \", district, gameData)\n    return gameData\n  }\n  if (!gameData.rosters || gameData.rosters.length <= district) {\n    console.log(\"Error updatePositionAssignment: no rosters\", district, gameData)\n    return gameData\n  }\n  const citizens = gameData.draft[district].citizens\n  const roster = gameData.rosters[district]\n  const position = citizen.assignedPosition\n  const oldPlayer = !position ? undefined : roster.get(position)\n  for (let i = 0; i < citizens.length; i++) {\n    if (oldPlayer && oldPlayer.name) {\n      if (citizens[i].name === oldPlayer.name) {\n        citizens[i].assignedPosition = undefined\n      }\n    }\n    if (citizens[i].name === citizen.name) {\n      const oldPosition = citizens[i].assignedPosition\n      if (oldPosition && citizen.assignedPosition !== oldPosition) roster.set(oldPosition, null)\n      citizens[i] = citizen\n    }\n  }\n  if (position) roster.set(position, citizen)\n  \n  return updateGameData(gameData)\n}\n\nexport function updateCitizen(\n  district: number,\n  citizen: Citizen\n): GameData {\n  return citizenUpdater(getOrCreateGameData(), district, citizen)\n}\n\nexport function progressRound(): GameData {\n  const gameData = getOrCreateGameData()\n  for (let d = 0; d < gameData.draft.length; d++) {\n    const maxTraining =\n      gameData.draft[d].facilities.advancedTraining ? SCORES.advancedFacility : SCORES.basicFacility\n    for (let c = 0; c < gameData.draft[d].citizens.length; c++) {\n      const citizen = gameData.draft[d].citizens[c]\n      let trainingValue = citizen.trainingValue\n      if (citizen.assignment === Assignment.Training) {\n        trainingValue = Math.min(maxTraining, trainingValue + SCORES.trainingOn)\n      } else {\n        trainingValue = Math.max(0, trainingValue + SCORES.trainingOff)\n      }\n      gameData.draft[d].citizens[c].trainingValue = trainingValue\n    }\n  }\n  gameData.round += 1\n  return updateGameData(gameData)\n}\n","\nimport { Citizen } from \"./citizen\";\nimport createCitizens from \"./createCitizens\";\nimport createDistrict from \"./createDistrict\";\nimport { District } from \"./district\";\n\nexport default function runDraft(governorCount: number, citizensPerGovernor: number): District[]{\n  const citizens = createCitizens(governorCount*citizensPerGovernor)\n  const results: Citizen[][] = []\n  for(let i=0; i<governorCount; i++){\n    results.push([])\n  }\n  let round = 0\n  \n  while (round < citizensPerGovernor) {\n    if (round%2 == 0) {\n      for(let i=0; i<governorCount; i++) {\n        results[i].push(citizens[round*governorCount + i])\n      }\n    } else {\n      let j = 0\n      for(let i=governorCount - 1; i >= 0; i--) {\n        results[i].push(citizens[round*governorCount + j])\n        j++\n      }\n    }\n    round++\n  }\n  return results.map((cs, index) => createDistrict(cs, `${index + 137}`))\n}\n","import { Citizen } from \"./citizen\";\nimport { District } from \"./district\";\n\nexport default function createDistrict(citizens: Citizen[], name: String): District {\n  return {\n    name: name,\n    citizens: citizens,\n    facilities: {\n      advancedTraining: false,\n    },\n  }\n}\n","export default function randomSummation(cards: number, max: number) {\n  const result: number[] = []\n  let current = 0\n  while (result.length < cards) {\n    current = current + Math.ceil(Math.random() * max)\n    result.push(current)\n  }\n  return result\n}\n","import React, { useCallback, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport DraftResults from './display/DraftResults';\nimport TextField from './display/TextField';\nimport ScavengerTotals from './display/ScavengerTotals';\nimport {\n  getOrCreateGameData,\n  resetGameData,\n  updateGameData,\n  updateCitizen,\n  progressRound,\n} from './mockAPI/localStorage';\nimport DistrictCitizens from './display/DistrictCitizens';\nimport { Citizen } from './mockAPI/citizen';\nimport { OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap';\nimport app from \"./app.module.css\"\n\n\n//Change these to change output\n\nfunction onChangeGameDataBuilder(\n  value: string,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  updateStore: (x: number) => void,\n  writeStore: () => void,\n): ((e: React.ChangeEvent<HTMLInputElement>) => void) {\n  return useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) { setValue(e.target.value) }\n    const parsed = Number(e.target.value)\n    if (Number.isInteger(parsed) && parsed > 0) {\n      updateStore(parsed)\n      writeStore()\n    }\n  }, [value, setValue, updateStore, writeStore])\n}\n\nfunction App() {\n  const [showReset, setShowReset] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [gameData, setGameData] = useState(getOrCreateGameData())\n  const [scoutNumbers, setScoutNumbers] = useState(gameData.scoutNumbers.toString())\n  const [scoutMax, setScoutMax] = useState(gameData.scoutMax.toString())\n  const [governors, setGovernors] = useState(gameData.governors.toString())\n  const [initialCitizens, setInitialCitizens] = useState(gameData.initialCitizens.toString())\n  const [\n    additionalCitizens, setAdditionalCitizens\n  ] = useState(gameData.additionalCitizens.toString())\n\n  const resetData = useCallback(() => {\n    //For when using actual API\n    setDisabled(true)\n    setGameData(resetGameData())\n    setDisabled(false)\n  }, [resetGameData])\n\n  const updateCitizenData = useCallback(\n    (district: number, citizen: Citizen) => {\n      setDisabled(true)\n      setGameData(updateCitizen(district, citizen))\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  const nextRound = useCallback(\n    () => {\n      setDisabled(true)\n      setGameData(progressRound())\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  function updateScoutNumbers(x: number) { gameData.scoutNumbers = x }\n  function updateScoutMax(x: number) { gameData.scoutMax = x }\n  function updateGovernors(x: number) { gameData.governors = x }\n  function updateInitialCitizens(x: number) { gameData.initialCitizens = x }\n  function updateAdditionalCitizens(x: number) { gameData.additionalCitizens = x }\n\n  function updateData(){\n    //For when using actual API\n    setDisabled(true)\n    setGameData(updateGameData(gameData))\n    setDisabled(false)\n  }\n\n  const changeScoutNumbers = onChangeGameDataBuilder(\n    scoutNumbers, setScoutNumbers, updateScoutNumbers, updateData\n  )\n  const changeScoutMax = onChangeGameDataBuilder(\n    scoutMax, setScoutMax, updateScoutMax, updateData\n  )\n  const changeGovernors = onChangeGameDataBuilder(\n    governors, setGovernors, updateGovernors, updateData\n  )\n  const changeInitialCitizens = onChangeGameDataBuilder(\n    initialCitizens, setInitialCitizens, updateInitialCitizens, updateData\n  )\n  const changeAdditionalCitizens = onChangeGameDataBuilder(\n    additionalCitizens, setAdditionalCitizens, updateAdditionalCitizens, updateData\n  )\n\n  const clickReset = useCallback(() => setShowReset(!showReset), [showReset, setShowReset])\n\n  const confirmReset = (p: TooltipProps) => (\n    <Tooltip {...p}> {\n      <div>\n        <h1>{`Are you sure you want to Reset?`}</h1>\n        <h3>{`All data will be lost`}</h3>\n        <Button variant='danger' onClick={resetData}>{`Yes, Reset the Game`}</Button>\n      </div>\n    } </Tooltip>\n  )\n\n  return (\n    <div className={app.App}>\n      <h3>{`Configuration - Scroll to bottom to reset`}</h3>\n      <TextField\n        label={\"Total Scavenger Values\"}\n        value={scoutNumbers}\n        onChange={changeScoutNumbers}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Max Scavenger Value\"}\n        value={scoutMax}\n        onChange={changeScoutMax}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Governors\"}\n        value={governors}\n        onChange={changeGovernors}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Initial Citizens per Governor\"}\n        value={initialCitizens}\n        onChange={changeInitialCitizens}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Total Additional Citizens\"}\n        value={additionalCitizens}\n        onChange={changeAdditionalCitizens}\n        disabled={disabled}\n      />\n      <h3>{`Current Round is ${gameData.round}`}</h3>\n      <div className={app.width25Percent}>\n        <Button variant='warning' disabled={disabled} onClick={nextRound}>\n          {`Progress Round`}\n        </Button>\n      </div>\n      <h3>Scavenger Values</h3>\n      <ScavengerTotals values={gameData.scavengerNumbers || []} />\n      <br/>\n      <h3>Draft Results</h3>\n      <DraftResults\n        draftResults={gameData.draft}\n        updateCitizen={updateCitizenData}\n        disabled={disabled}\n      />\n\n      <br/>\n      <h3>Additional Citizens</h3>\n      <DistrictCitizens citizens={gameData.extraCitizens}/>\n      <OverlayTrigger\n        placement='top'\n        delay={{ show: 250, hide: 400 }}\n        overlay={confirmReset}\n      >\n        <Button disabled={disabled} variant='warning' onClick={clickReset}>Reset Game</Button>\n      </OverlayTrigger>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fields_container__1E8Zb\",\"label\":\"fields_label__2ZHJD\",\"textField\":\"fields_textField__1EM4s\",\"radioNoWrap\":\"fields_radioNoWrap__GwVEq\",\"radioOption\":\"fields_radioOption__2P4VG\",\"radioToggle\":\"fields_radioToggle__2L57R\",\"left\":\"fields_left__1C3eH\"};"],"sourceRoot":""}