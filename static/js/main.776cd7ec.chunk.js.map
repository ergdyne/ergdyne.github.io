{"version":3,"sources":["display/fields.module.css","mockAPI/citizen.tsx","display/RadioField.tsx","display/CitizenCard.tsx","display/DistrictCitizens.tsx","display/DraftResults.tsx","display/TextField.tsx","display/ScavengerTotals.tsx","functions/randomFromList.tsx","mockAPI/getNames.tsx","mockAPI/createCitizens.tsx","mockAPI/localStorage.tsx","mockAPI/runDraft.tsx","functions/randomSummation.tsx","App.tsx","index.tsx"],"names":["module","exports","container","label","textField","radioNoWrap","radioOption","radioToggle","left","Position","Assignment","POSITIONS","Center","Generalist","PointGuard","PowerForward","ShootingGuard","SmallForward","POSITION_OPTIONS","filter","x","map","value","ASSIGNMENT_OPTIONS","Labor","Scavenger","Training","MAX_BASKETBALL_APTITUDE","RadioOption","props","option","onChange","onClick","useCallback","selected","react_default","a","createElement","Button","className","fields","disabled","variant","RadioField","options","inline","concat","Fragment","RadioField_RadioOption","key","displayPreferred","position","CitizenCard","citizen","update","updatePosition","assignedPosition","assignment","updateWorkAssignment","name","display_RadioField","result","basketBallAptitude","preferredPosition","aboutCitizen","DistrictCitizens","districtNumber","citizens","updateCitizen","i","DraftResults","draftResults","citizenUpdate","TextField","type","ScavengerTotals","values","v","randomFromList","list","Math","floor","random","length","LETTERS","NAMES","getNames","amount","names","Set","size","last","first","charAt","add","Array","from","createCitizens","sorted","arguments","undefined","ceil","sort","b","SCOUT_NUMBERS","SCOUT_MAX","GOVERNORS","INITIAL_CITIZENS","ADDITIONAL_CITIZENS","GAME_DATA","EMPTY_ROSTER","Map","createAndSetGameData","scoutNumbers","scoutMax","governors","initialCitizens","additionalCitizens","draft","governorCount","citizensPerGovernor","results","push","round","j","runDraft","scavengerNumbers","cards","max","current","randomSummation","extraCitizens","rosters","_","updateGameData","getOrCreateGameData","gameData","localStorage","getItem","JSON","parse","r","Object","entries","resetGameData","tempData","fromEntries","setItem","stringify","district","console","log","roster","oldPlayer","get","set","citizenUpdater","onChangeGameDataBuilder","setValue","updateStore","writeStore","e","target","parsed","Number","isInteger","App","_useState","useState","_useState2","slicedToArray","setDisabled","_useState3","_useState4","setGameData","_useState5","toString","_useState6","setScoutNumbers","_useState7","_useState8","setScoutMax","_useState9","_useState10","setGovernors","_useState11","_useState12","setInitialCitizens","_useState13","_useState14","setAdditionalCitizens","resetData","updateCitizenData","updateData","changeScoutNumbers","changeScoutMax","changeGovernors","changeInitialCitizens","changeAdditionalCitizens","display_TextField","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.776cd7ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fields_container__1E8Zb\",\"label\":\"fields_label__2ZHJD\",\"textField\":\"fields_textField__1EM4s\",\"radioNoWrap\":\"fields_radioNoWrap__GwVEq\",\"radioOption\":\"fields_radioOption__2P4VG\",\"radioToggle\":\"fields_radioToggle__2L57R\",\"left\":\"fields_left__1C3eH\"};","\nimport Option from \"../types/Option\"\n\nexport enum Position {\n  PointGuard = 'Point Guard',\n  ShootingGuard = 'Shooting Guard',\n  SmallForward = 'Small Forward',\n  PowerForward = 'Power Forward',\n  Center = 'Center',\n  Generalist = 'Generalist',\n}\n\nexport const POSITIONS: Position[] = [\n  Position.Center,\n  Position.Generalist,\n  Position.PointGuard,\n  Position.PowerForward,\n  Position.ShootingGuard,\n  Position.SmallForward,\n]\n\nexport const POSITION_OPTIONS: Option[] = POSITIONS.filter(\n  x => x !== Position.Generalist\n).map(x => { return { label: x, value: x } })\n\nexport enum Assignment {\n  Labor = 'Labor',\n  Scavenger = 'Scavenger',\n  Training = 'Training',\n}\n\nexport const ASSIGNMENTS: Assignment[] = [\n  Assignment.Labor,\n  Assignment.Scavenger,\n  Assignment.Training\n]\n\nexport const ASSIGNMENT_OPTIONS: Option[] = ASSIGNMENTS.map(x => { return { label: x, value: x } })\n\nexport const MAX_BASKETBALL_APTITUDE = 100\n\nexport interface Citizen {\n  name: String\n  preferredPosition: Position\n  basketBallAptitude: number\n  assignment: Assignment\n  assignedPosition?: Position\n  //Store other information such as injury and current skill and UID\n}\n","import React, { useCallback } from \"react\"\nimport Button from 'react-bootstrap/Button'\nimport Option from \"../types/Option\"\nimport fields from \"./fields.module.css\"\n\ninterface OptionProps {\n  option: Option\n  onChange: (value: string | number) => void\n  value?: string\n}\n\n\ninterface Props {\n  options: Option[]\n  onChange: (value: string | number) => void\n  disabled?: boolean\n  label?: string\n  inline?: boolean\n  value?: string\n}\n\nconst RadioOption = (props: OptionProps): JSX.Element => {\n  const { option, value, onChange } = props\n  const onClick = useCallback(() => { onChange(option.value) }, [option, onChange])\n  const selected = option.value === value\n\n  return (\n    <Button\n      className={fields.radioToggle}\n      onClick={onClick}\n      disabled={selected}\n      variant={selected ? \"light\" : \"dark\"}\n    >\n      {option.label}  \n    </Button>\n  )\n}\n\nconst RadioField = (props: Props): JSX.Element => {\n  const { value, options, onChange, disabled, label, inline } = props\n  return (\n    <div className={`${fields.container} ${fields.radioNoWrap} ${inline ? fields.left : ''}`}>\n      {label ? <div className={fields.label}>{label}</div> : <></>}\n      { options.map(option => <RadioOption\n          key={option.value}\n          option={option}\n          value={value}\n          onChange={onChange}\n        />)\n      }\n    </div>\n  )\n\n}\n\nexport default RadioField\n","import React, { useCallback } from 'react'\nimport {\n  Citizen,\n  Position,\n  Assignment,\n  MAX_BASKETBALL_APTITUDE,\n  POSITION_OPTIONS,\n  ASSIGNMENT_OPTIONS,\n} from '../mockAPI/citizen'\nimport RadioField from './RadioField'\n\ninterface Props {\n  citizen: Citizen\n  disabled: boolean\n  update?: (c: Citizen) => void\n}\n\nfunction displayPreferred(position: Position): string {\n  return (position == Position.Generalist) ? 'any position' : position\n}\n\nfunction aboutCitizen(citizen: Citizen): string {\n  let result = `Basketball aptitude of ${citizen.basketBallAptitude}. `\n  \n  if (citizen.assignedPosition) {\n    result = result + `They are playing ${citizen.assignedPosition}, `\n    if (\n      citizen.assignedPosition == citizen.preferredPosition ||\n      citizen.preferredPosition == Position.Generalist\n    ) {\n      result = result + 'and '\n    } else {\n      result = result + 'but '\n    }\n    result = result + `they prefer playing ${citizen.preferredPosition}`\n  } else {\n    result = result + `They are currently working in ${citizen.assignment}. `\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result +\n        `They would prefer to be playing ${displayPreferred(citizen.preferredPosition)}.`\n    } else {\n      result = result +\n        `They could play ${displayPreferred(citizen.preferredPosition)}, but would rather not.`\n    }\n  }\n  return result\n}\n\nexport default function CitizenCard(props: Props) {\n  const { citizen, update, disabled } = props\n\n  const updatePosition = useCallback((position: string | number) => {\n    citizen.assignedPosition = position as Position\n    citizen.assignment = Assignment.Training\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const updateWorkAssignment = useCallback((assignment: string | number) => {\n    citizen.assignment = assignment as Assignment\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  return (<div>\n    <h5>{citizen.name}</h5>\n    <RadioField\n      options={ASSIGNMENT_OPTIONS}\n      onChange={updateWorkAssignment}\n      disabled={disabled}\n      inline={true}\n      value={citizen.assignment}\n    />\n    <RadioField\n      options={POSITION_OPTIONS}\n      onChange={updatePosition}\n      disabled={disabled}\n      inline={true}\n      value={citizen.assignedPosition}\n    />\n    <p> {aboutCitizen(citizen)} </p>\n  </div>)\n}\n","import React from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport CitizenCard from './CitizenCard'\n\ninterface Props {\n  citizens: Citizen[]\n  updateCitizen?: (c: Citizen) => void\n  districtNumber?: number\n  disabled?: boolean\n}\n\nexport default function DistrictCitizens(props: Props) {\n  const { districtNumber, citizens, updateCitizen, disabled } = props\n  return (<div>\n    <br/>\n    {(districtNumber) ? <h4>{`District ${districtNumber}`}</h4> : <div/>}\n    {citizens.map((citizen, i) => <CitizenCard\n        key={i}\n        citizen={citizen}\n        update={updateCitizen}\n        disabled={disabled || !updateCitizen}\n      />\n    )}\n  </div>)\n}\n","import React, { useCallback } from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport DistrictCitizens from './DistrictCitizens'\n\ninterface Props {\n  draftResults: Citizen[][]\n  updateCitizen: (district: number, citizen: Citizen) => void\n  disabled: boolean\n}\n\nexport default function DraftResults(props: Props) {\n  const { draftResults, updateCitizen, disabled } = props\n  return (<div>\n    { draftResults.map((citizens, i) => {\n        const citizenUpdate = useCallback(\n          (citizen: Citizen) => { updateCitizen(i, citizen) },\n          [citizens, i]\n        )\n        return (\n          <DistrictCitizens\n            key = {i}\n            citizens = {citizens}\n            districtNumber = {i + 137}\n            updateCitizen={citizenUpdate}\n            disabled={disabled}\n          />\n        )\n      })\n    }\n  </div>)\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst TextField = (props: Props): JSX.Element => {\n  const { label, value, disabled, onChange } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.label}>{label}</div>\n      <input\n        type=\"text\"\n        className={fields.textField}\n        disabled={disabled}\n        value={value}\n        onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface Props {\n  values: number[]\n}\n\nexport default function ScavengerTotals(props: Props){\n  const { values } = props\n  return (\n    <div>\n      {\n        values.map((v, i) => <Button key={i} variant={(i%2 == 0) ? \"light\" : \"dark\"}> { v } </Button>)\n\n      }\n    </div>\n  )\n}\n","export default function randomFromList<Type>(list: Type[]): Type {\n  return list[Math.floor(Math.random() * list.length)]\n}\n","import randomFromList from \"../functions/randomFromList\"\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfunction getNames(amount: number): string[]{\n  const names: Set<string> = new Set()\n\n  while(names.size < amount){\n    const last = randomFromList(NAMES)\n    const first = LETTERS.charAt(Math.floor(Math.random() * LETTERS.length))\n    names.add(`${first}. ${last}`)\n  }\n\n  return Array.from(names)\n}\n\nconst NAMES = [\n\t'SMITH',\n\t'JOHNSON',\n\t'WILLIAMS',\n\t'JONES',\n\t'BROWN',\n\t'DAVIS',\n\t'MILLER',\n\t'WILSON',\n\t'MOORE',\n\t'TAYLOR',\n\t'ANDERSON',\n\t'THOMAS',\n\t'JACKSON',\n\t'WHITE',\n\t'HARRIS',\n\t'MARTIN',\n\t'THOMPSON',\n\t'GARCIA',\n\t'MARTINEZ',\n\t'ROBINSON',\n\t'CLARK',\n\t'RODRIGUEZ',\n\t'LEWIS',\n\t'LEE',\n\t'WALKER',\n\t'HALL',\n\t'ALLEN',\n\t'YOUNG',\n\t'HERNANDEZ',\n\t'KING',\n\t'WRIGHT',\n\t'LOPEZ',\n\t'HILL',\n\t'SCOTT',\n\t'GREEN',\n\t'ADAMS',\n\t'BAKER',\n\t'GONZALEZ',\n\t'NELSON',\n\t'CARTER',\n\t'MITCHELL',\n\t'PEREZ',\n\t'ROBERTS',\n\t'TURNER',\n\t'PHILLIPS',\n\t'CAMPBELL',\n\t'PARKER',\n\t'EVANS',\n\t'EDWARDS',\n\t'COLLINS',\n\t'STEWART',\n\t'SANCHEZ',\n\t'MORRIS',\n\t'ROGERS',\n\t'REED',\n\t'COOK',\n\t'MORGAN',\n\t'BELL',\n\t'MURPHY',\n\t'BAILEY',\n\t'RIVERA',\n\t'COOPER',\n\t'RICHAR',\n]\nexport default getNames\n","import randomFromList from '../functions/randomFromList';\nimport getNames from './getNames';\nimport { Citizen, POSITIONS, MAX_BASKETBALL_APTITUDE, Assignment } from './citizen';\n\nexport default function createCitizens(amount: number, sorted:boolean = true): Citizen[] {\n  //Sorted by basketball Aptitude\n  const citizens: Citizen[] = getNames(amount).map(name => {\n    const citizen: Citizen = {\n      name: name,\n      basketBallAptitude: Math.ceil(Math.random() * MAX_BASKETBALL_APTITUDE),\n      preferredPosition: randomFromList(POSITIONS),\n      assignment: Assignment.Labor,\n    }\n    return citizen\n  })\n  if(sorted) citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n  return citizens\n}\n","import { debug } from \"console\"\nimport randomSummation from \"../functions/randomSummation\"\nimport { Assignment, Citizen, Position } from \"./citizen\"\nimport createCitizens from \"./createCitizens\"\nimport runDraft from \"./runDraft\"\n\nconst SCOUT_NUMBERS = 20\nconst SCOUT_MAX = 40\n\nconst GOVERNORS = 16\nconst INITIAL_CITIZENS = 10\n\nconst ADDITIONAL_CITIZENS = 20\n\nconst GAME_DATA = 'GAME_DATA'\n\nexport const EMPTY_GAME_DATA: GameData = {\n  draft: [[]],\n  rosters: [],\n  scavengerNumbers: [],\n  extraCitizens: [],\n  scoutNumbers: 0,\n  scoutMax: 0,\n  governors: 0,\n  initialCitizens: 0,\n  additionalCitizens: 0,\n}\n\nconst EMPTY_ROSTER: Map<Position, Citizen | null> = new Map<Position, Citizen | null>()\nEMPTY_ROSTER.set(Position.Center, null)\n\n\nexport interface GameData {\n  draft: Citizen[][]\n  rosters: Map<Position, Citizen | null>[]\n  scavengerNumbers: number[]\n  extraCitizens: Citizen[]\n  scoutNumbers: number\n  scoutMax: number\n  governors: number\n  initialCitizens: number\n  additionalCitizens: number\n}\n\nexport function createAndSetGameData(\n  scoutNumbers: number = SCOUT_NUMBERS,\n  scoutMax: number = SCOUT_MAX,\n  governors: number = GOVERNORS,\n  initialCitizens: number = INITIAL_CITIZENS,\n  additionalCitizens: number = ADDITIONAL_CITIZENS,\n): GameData {\n  const draft = runDraft(governors, initialCitizens)\n  const scavengerNumbers = randomSummation(scoutNumbers, scoutMax)\n  const extraCitizens = createCitizens(additionalCitizens, false)\n  const rosters = draft.map( _ => new Map(EMPTY_ROSTER))\n  const gameData: GameData = {\n    draft,\n    rosters,\n    scavengerNumbers,\n    extraCitizens,\n    scoutNumbers,\n    scoutMax,\n    governors,\n    initialCitizens,\n    additionalCitizens\n  }\n  \n  return updateGameData(gameData)\n}\n\nexport function getOrCreateGameData() {\n  const gameData: string | null = localStorage.getItem(GAME_DATA)\n  const result: GameData = gameData ? JSON.parse(gameData) : createAndSetGameData()\n  //convert objects to maps\n  result.rosters = result.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return result\n}\n\nexport function resetGameData() {\n  const gameData = getOrCreateGameData()\n  return createAndSetGameData(\n    gameData.scoutNumbers,\n    gameData.scoutMax,\n    gameData.governors,\n    gameData.initialCitizens,\n    gameData.additionalCitizens,\n  )\n}\n\nexport function updateGameData(gameData: GameData): GameData {\n  const tempData: any = gameData\n  //handle conversion to objects\n  tempData.rosters = gameData.rosters.map(r => Object.fromEntries(r))\n  localStorage.setItem(GAME_DATA, JSON.stringify(tempData))\n  //Handle conversion back to map\n  gameData.rosters = gameData.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return gameData\n}\n\nfunction citizenUpdater(\n  gameData: GameData,\n  district: number,\n  citizen: Citizen\n): GameData {\n  if (gameData.draft.length <= district) {\n    console.log(\"Error updatePositionAssignment: invalid district \", district, gameData)\n    return gameData\n  }\n  if (!gameData.rosters || gameData.rosters.length <= district) {\n    console.log(\"Error updatePositionAssignment: no rosters\", district, gameData)\n    return gameData\n  }\n  const citizens = gameData.draft[district]\n  const roster = gameData.rosters[district]\n  const position = citizen.assignedPosition\n  const oldPlayer = !position ? undefined : roster.get(position)\n  for(let i = 0; i < citizens.length; i++) {\n    if (oldPlayer && oldPlayer.name) {\n      if (citizens[i].name === oldPlayer.name) {\n        citizens[i].assignedPosition = undefined\n      }\n    }\n    if (citizens[i].name === citizen.name) {\n      citizens[i] = citizen\n    }\n  }\n  if (position) roster.set(position, citizen)\n  \n  return updateGameData(gameData)\n}\n\nexport function updateCitizen(\n  district: number,\n  citizen: Citizen\n): GameData {\n  return citizenUpdater(getOrCreateGameData(), district, citizen)\n}\n","\nimport { Citizen } from \"./citizen\";\nimport createCitizens from \"./createCitizens\";\n\nexport default function runDraft(governorCount: number, citizensPerGovernor: number): Citizen[][]{\n  const citizens = createCitizens(governorCount*citizensPerGovernor)\n  const results: Citizen[][] = []\n  for(let i=0; i<governorCount; i++){\n    results.push([])\n  }\n  let round = 0\n  \n  while (round < citizensPerGovernor) {\n    if (round%2 == 0) {\n      for(let i=0; i<governorCount; i++) {\n        results[i].push(citizens[round*governorCount + i])\n      }\n    } else {\n      let j = 0\n      for(let i=governorCount - 1; i >= 0; i--) {\n        results[i].push(citizens[round*governorCount + j])\n        j++\n      }\n    }\n    round++\n  }\n  return results\n}\n","export default function randomSummation(cards: number, max: number) {\n  const result: number[] = []\n  let current = 0\n  while (result.length < cards) {\n    current = current + Math.ceil(Math.random() * max)\n    result.push(current)\n  }\n  return result\n}\n","import React, { useCallback, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport './App.css';\nimport DraftResults from './display/DraftResults';\nimport TextField from './display/TextField';\nimport ScavengerTotals from './display/ScavengerTotals';\nimport {\n  getOrCreateGameData,\n  resetGameData,\n  updateGameData,\n  updateCitizen,\n} from './mockAPI/localStorage';\nimport DistrictCitizens from './display/DistrictCitizens';\nimport { Citizen } from './mockAPI/citizen';\n\n\n//Change these to change output\n\nfunction onChangeGameDataBuilder(\n  value: string,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  updateStore: (x: number) => void,\n  writeStore: () => void,\n): ((e: React.ChangeEvent<HTMLInputElement>) => void) {\n  return useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) { setValue(e.target.value) }\n    const parsed = Number(e.target.value)\n    if (Number.isInteger(parsed) && parsed > 0) {\n      updateStore(parsed)\n      writeStore()\n    }\n  }, [value, setValue, updateStore, writeStore])\n}\n\nfunction App() {\n  const [disabled, setDisabled] = useState(false)\n  const [gameData, setGameData] = useState(getOrCreateGameData())\n  const [scoutNumbers, setScoutNumbers] = useState(gameData.scoutNumbers.toString())\n  const [scoutMax, setScoutMax] = useState(gameData.scoutMax.toString())\n  const [governors, setGovernors] = useState(gameData.governors.toString())\n  const [initialCitizens, setInitialCitizens] = useState(gameData.initialCitizens.toString())\n  const [\n    additionalCitizens, setAdditionalCitizens\n  ] = useState(gameData.additionalCitizens.toString())\n\n  const resetData = useCallback(() => {\n    //For when using actual API\n    setDisabled(true)\n    setGameData(resetGameData())\n    setDisabled(false)\n  }, [resetGameData])\n\n  const updateCitizenData = useCallback(\n    (district: number, citizen: Citizen) => {\n      setDisabled(true)\n      setGameData(updateCitizen(district, citizen))\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  function updateScoutNumbers(x: number) { gameData.scoutNumbers = x }\n  function updateScoutMax(x: number) { gameData.scoutMax = x }\n  function updateGovernors(x: number) { gameData.governors = x }\n  function updateInitialCitizens(x: number) { gameData.initialCitizens = x }\n  function updateAdditionalCitizens(x: number) { gameData.additionalCitizens = x }\n\n  function updateData(){\n    //For when using actual API\n    setDisabled(true)\n    setGameData(updateGameData(gameData))\n    setDisabled(false)\n  }\n\n  const changeScoutNumbers = onChangeGameDataBuilder(\n    scoutNumbers, setScoutNumbers, updateScoutNumbers, updateData\n  )\n  const changeScoutMax = onChangeGameDataBuilder(\n    scoutMax, setScoutMax, updateScoutMax, updateData\n  )\n  const changeGovernors = onChangeGameDataBuilder(\n    governors, setGovernors, updateGovernors, updateData\n  )\n  const changeInitialCitizens = onChangeGameDataBuilder(\n    initialCitizens, setInitialCitizens, updateInitialCitizens, updateData\n  )\n  const changeAdditionalCitizens = onChangeGameDataBuilder(\n    additionalCitizens, setAdditionalCitizens, updateAdditionalCitizens, updateData\n  )\n\n  return (\n    <div className=\"App\">\n      <Button disabled={disabled} variant='warning' onClick={resetData}>Reset Game</Button>\n      <h3>Configuration</h3>\n      <TextField\n        label={\"Total Scavenger Values\"}\n        value={scoutNumbers}\n        onChange={changeScoutNumbers}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Max Scavenger Value\"}\n        value={scoutMax}\n        onChange={changeScoutMax}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Governors\"}\n        value={governors}\n        onChange={changeGovernors}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Initial Citizens per Governor\"}\n        value={initialCitizens}\n        onChange={changeInitialCitizens}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Total Additional Citizens\"}\n        value={additionalCitizens}\n        onChange={changeAdditionalCitizens}\n        disabled={disabled}\n      />\n      <h3>Scavenger Values</h3>\n      <ScavengerTotals values={gameData.scavengerNumbers || []} />\n      <br/>\n      <h3>Draft Results</h3>\n      <DraftResults\n        draftResults={gameData.draft}\n        updateCitizen={updateCitizenData}\n        disabled={disabled}\n      />\n\n      <br/>\n      <h3>Additional Citizens</h3>\n      <DistrictCitizens citizens={gameData.extraCitizens}/>\n\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}