{"version":3,"sources":["display/citizencard.module.css","mockAPI/citizen.tsx","display/RadioField.tsx","display/CitizenCard.tsx","display/DistrictCitizens.tsx","display/DraftResults.tsx","display/TextField.tsx","display/ScavengerTotals.tsx","functions/randomFromList.tsx","mockAPI/getNames.tsx","mockAPI/createCitizens.tsx","mockAPI/localStorage.tsx","mockAPI/runDraft.tsx","functions/randomSummation.tsx","App.tsx","index.tsx","display/fields.module.css"],"names":["module","exports","section","name","score","citizen","Position","Assignment","POSITIONS","Center","Generalist","PointGuard","PowerForward","ShootingGuard","SmallForward","POSITION_OPTIONS","filter","x","map","label","value","ASSIGNMENT_OPTIONS","Labor","Scavenger","Training","MAX_BASKETBALL_APTITUDE","RadioOption","props","option","onChange","preferedValue","disabled","onClick","useCallback","selected","variant","react_default","a","createElement","Button","className","fields","radioToggle","RadioField","options","inline","concat","container","radioNoWrap","left","Fragment","RadioField_RadioOption","key","displayPreferred","position","CitizenCard","update","updatePosition","assignedPosition","assignment","updateWorkAssignment","citizencard","OverlayTrigger","placement","delay","show","hide","overlay","p","Tooltip","result","preferredPosition","basketBallAptitude","aboutCitizen","display_RadioField","DistrictCitizens","districtNumber","citizens","updateCitizen","i","DraftResults","draftResults","citizenUpdate","TextField","type","textField","ScavengerTotals","values","v","randomFromList","list","Math","floor","random","length","LETTERS","NAMES","getNames","amount","names","Set","size","last","first","charAt","add","Array","from","createCitizens","sorted","arguments","undefined","ceil","sort","b","SCOUT_NUMBERS","SCOUT_MAX","GOVERNORS","INITIAL_CITIZENS","ADDITIONAL_CITIZENS","GAME_DATA","EMPTY_ROSTER","Map","createAndSetGameData","scoutNumbers","scoutMax","governors","initialCitizens","additionalCitizens","draft","governorCount","citizensPerGovernor","results","push","round","j","runDraft","scavengerNumbers","cards","max","current","randomSummation","extraCitizens","rosters","_","updateGameData","getOrCreateGameData","gameData","localStorage","getItem","JSON","parse","r","Object","entries","resetGameData","tempData","fromEntries","setItem","stringify","district","console","log","roster","oldPlayer","get","oldPosition","set","citizenUpdater","onChangeGameDataBuilder","setValue","updateStore","writeStore","e","target","parsed","Number","isInteger","App","_useState","useState","_useState2","slicedToArray","setDisabled","_useState3","_useState4","setGameData","_useState5","toString","_useState6","setScoutNumbers","_useState7","_useState8","setScoutMax","_useState9","_useState10","setGovernors","_useState11","_useState12","setInitialCitizens","_useState13","_useState14","setAdditionalCitizens","resetData","updateCitizenData","updateData","changeScoutNumbers","changeScoutMax","changeGovernors","changeInitialCitizens","changeAdditionalCitizens","display_TextField","ReactDOM","render","StrictMode","src_App","document","getElementById","radioOption"],"mappings":"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","file":"static/js/main.a9cb4081.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"citizencard_section__jcf3v\",\"name\":\"citizencard_name__2RzKv\",\"score\":\"citizencard_score__zJg_7\",\"citizen\":\"citizencard_citizen__OVY-8\"};","\nimport Option from \"../types/Option\"\n\nexport enum Position {\n  PointGuard = 'Point Guard',\n  ShootingGuard = 'Shooting Guard',\n  SmallForward = 'Small Forward',\n  PowerForward = 'Power Forward',\n  Center = 'Center',\n  Generalist = 'Generalist',\n}\n\nexport const POSITIONS: Position[] = [\n  Position.Center,\n  Position.Generalist,\n  Position.PointGuard,\n  Position.PowerForward,\n  Position.ShootingGuard,\n  Position.SmallForward,\n]\n\nexport const POSITION_OPTIONS: Option[] = POSITIONS.filter(\n  x => x !== Position.Generalist\n).map(x => { return { label: x, value: x } })\n\nexport enum Assignment {\n  Labor = 'Labor',\n  Scavenger = 'Scavenger',\n  Training = 'Training',\n}\n\nexport const ASSIGNMENTS: Assignment[] = [\n  Assignment.Labor,\n  Assignment.Scavenger,\n  Assignment.Training\n]\n\nexport const ASSIGNMENT_OPTIONS: Option[] = ASSIGNMENTS.map(x => { return { label: x, value: x } })\n\nexport const MAX_BASKETBALL_APTITUDE = 100\n\nexport interface Citizen {\n  name: String\n  preferredPosition: Position\n  basketBallAptitude: number\n  assignment: Assignment\n  assignedPosition?: Position\n  //Store other information such as injury and current skill and UID\n}\n","import React, { useCallback } from \"react\"\nimport Button from 'react-bootstrap/Button'\nimport Option from \"../types/Option\"\nimport fields from \"./fields.module.css\"\n\ninterface OptionProps {\n  option: Option\n  onChange: (value: string) => void\n  value?: string\n  preferedValue?: string\n  disabled?: boolean\n}\n\ninterface Props {\n  options: Option[]\n  onChange: (value: string) => void\n  disabled?: boolean\n  label?: string\n  inline?: boolean\n  value?: string\n  preferedValue?: string\n}\n\nconst RadioOption = (props: OptionProps): JSX.Element => {\n  const { option, value, onChange, preferedValue, disabled } = props\n  const onClick = useCallback(() => { onChange(option.value) }, [option, onChange])\n  const selected = option.value === value\n  const variant = selected ? \"warning\" : (preferedValue === option.value ? \"secondary\" : \"dark\")\n\n  return (\n    <Button\n      className={fields.radioToggle}\n      onClick={onClick}\n      disabled={selected || disabled}\n      variant={variant}\n    >\n      {option.label}  \n    </Button>\n  )\n}\n\nconst RadioField = (props: Props): JSX.Element => {\n  const { value, options, onChange, disabled, label, inline, preferedValue } = props\n  return (\n    <div className={`${fields.container} ${fields.radioNoWrap} ${inline ? fields.left : ''}`}>\n      {label ? <div className={fields.label}>{label}</div> : <></>}\n      { options.map(option => <RadioOption\n          key={option.value}\n          option={option}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          preferedValue={preferedValue}\n        />)\n      }\n    </div>\n  )\n\n}\n\nexport default RadioField\n","import React, { useCallback } from 'react'\nimport {\n  Citizen,\n  Position,\n  Assignment,\n  MAX_BASKETBALL_APTITUDE,\n  POSITION_OPTIONS,\n  ASSIGNMENT_OPTIONS,\n} from '../mockAPI/citizen'\nimport RadioField from './RadioField'\nimport citizencard from \"./citizencard.module.css\"\nimport { Button, OverlayTrigger, Tooltip, TooltipProps } from 'react-bootstrap'\n\ninterface Props {\n  citizen: Citizen\n  disabled: boolean\n  update?: (c: Citizen) => void\n}\n\nfunction displayPreferred(position: Position): string {\n  return (position == Position.Generalist) ? 'any position' : position\n}\n\nfunction aboutCitizen(citizen: Citizen): string {\n  let result = ``\n  \n  if (citizen.assignedPosition) {\n    result = result + `They are playing ${citizen.assignedPosition}, `\n    if ((\n      citizen.assignedPosition == citizen.preferredPosition ||\n      citizen.preferredPosition == Position.Generalist) &&\n      citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE\n    ) {\n      result = result + 'and '\n    } else {\n      result = result + 'but '\n    }\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result + `they prefer playing ${citizen.preferredPosition}`\n    } else {\n      result = result + `they would rather not.`\n    }\n  } else {\n    result = result + `They are currently working in ${citizen.assignment}. `\n    if (citizen.basketBallAptitude > 0.5 * MAX_BASKETBALL_APTITUDE) {\n      result = result +\n        `They would prefer to be playing ${displayPreferred(citizen.preferredPosition)}.`\n    } else {\n      result = result +\n        `They could play ${displayPreferred(citizen.preferredPosition)}, but would rather not.`\n    }\n  }\n  return result\n}\n\nexport default function CitizenCard(props: Props) {\n  const { citizen, update, disabled } = props\n\n  const updatePosition = useCallback((position: string | number) => {\n    citizen.assignedPosition = position as Position\n    citizen.assignment = Assignment.Training\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const updateWorkAssignment = useCallback((assignment: string | number) => {\n    citizen.assignment = assignment as Assignment\n    if(update) update(citizen)\n  }, [update, citizen])\n\n  const citizenBlurb = (p: TooltipProps) => (\n    <Tooltip {...p}> {aboutCitizen(citizen)} </Tooltip>\n  )\n\n  return (\n    <div className={citizencard.citizen}>\n      <OverlayTrigger\n        placement='right'\n        delay={{ show: 250, hide: 400 }}\n        overlay={citizenBlurb}\n      >\n        <div className={citizencard.section} >\n          <Button className={citizencard.name} variant='dark' > {citizen.name} </Button>\n          <Button className={citizencard.score} variant='dark' >\n            {citizen.basketBallAptitude}\n          </Button>\n        </div>\n      </OverlayTrigger>\n      <RadioField\n        options={ASSIGNMENT_OPTIONS}\n        onChange={updateWorkAssignment}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignment}\n      />\n      <RadioField\n        options={POSITION_OPTIONS}\n        onChange={updatePosition}\n        disabled={disabled}\n        inline={true}\n        value={citizen.assignedPosition}\n        preferedValue={citizen.preferredPosition}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport CitizenCard from './CitizenCard'\n\ninterface Props {\n  citizens: Citizen[]\n  updateCitizen?: (c: Citizen) => void\n  districtNumber?: number\n  disabled?: boolean\n}\n\nexport default function DistrictCitizens(props: Props) {\n  const { districtNumber, citizens, updateCitizen, disabled } = props\n  return (<div>\n    <br/>\n    {(districtNumber) ? <h4>{`District ${districtNumber}`}</h4> : <div/>}\n    {citizens.map((citizen, i) => <CitizenCard\n        key={i}\n        citizen={citizen}\n        update={updateCitizen}\n        disabled={disabled || !updateCitizen}\n      />\n    )}\n  </div>)\n}\n","import React, { useCallback } from 'react'\nimport { Citizen } from '../mockAPI/citizen'\nimport DistrictCitizens from './DistrictCitizens'\n\ninterface Props {\n  draftResults: Citizen[][]\n  updateCitizen: (district: number, citizen: Citizen) => void\n  disabled: boolean\n}\n\nexport default function DraftResults(props: Props) {\n  const { draftResults, updateCitizen, disabled } = props\n  return (<div>\n    { draftResults.map((citizens, i) => {\n        const citizenUpdate = useCallback(\n          (citizen: Citizen) => { updateCitizen(i, citizen) },\n          [citizens, i]\n        )\n        return (\n          <DistrictCitizens\n            key = {i}\n            citizens = {citizens}\n            districtNumber = {i + 137}\n            updateCitizen={citizenUpdate}\n            disabled={disabled}\n          />\n        )\n      })\n    }\n  </div>)\n}\n","import React from \"react\"\n\nimport fields from \"./fields.module.css\"\n\ninterface Props {\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  disabled?: boolean\n}\n\nconst TextField = (props: Props): JSX.Element => {\n  const { label, value, disabled, onChange } = props\n  return (\n    <div className={fields.container}>\n      <div className={fields.label}>{label}</div>\n      <input\n        type=\"text\"\n        className={fields.textField}\n        disabled={disabled}\n        value={value}\n        onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\n\ninterface Props {\n  values: number[]\n}\n\nexport default function ScavengerTotals(props: Props){\n  const { values } = props\n  return (\n    <div>\n      {\n        values.map((v, i) => <Button key={i} variant={(i%2 == 0) ? \"light\" : \"dark\"}> { v } </Button>)\n\n      }\n    </div>\n  )\n}\n","export default function randomFromList<Type>(list: Type[]): Type {\n  return list[Math.floor(Math.random() * list.length)]\n}\n","import randomFromList from \"../functions/randomFromList\"\n\nconst LETTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfunction getNames(amount: number): string[]{\n  const names: Set<string> = new Set()\n\n  while(names.size < amount){\n    const last = randomFromList(NAMES)\n    const first = LETTERS.charAt(Math.floor(Math.random() * LETTERS.length))\n    names.add(`${first}. ${last}`)\n  }\n\n  return Array.from(names)\n}\n\nconst NAMES = [\n\t'SMITH',\n\t'JOHNSON',\n\t'WILLIAMS',\n\t'JONES',\n\t'BROWN',\n\t'DAVIS',\n\t'MILLER',\n\t'WILSON',\n\t'MOORE',\n\t'TAYLOR',\n\t'ANDERSON',\n\t'THOMAS',\n\t'JACKSON',\n\t'WHITE',\n\t'HARRIS',\n\t'MARTIN',\n\t'THOMPSON',\n\t'GARCIA',\n\t'MARTINEZ',\n\t'ROBINSON',\n\t'CLARK',\n\t'RODRIGUEZ',\n\t'LEWIS',\n\t'LEE',\n\t'WALKER',\n\t'HALL',\n\t'ALLEN',\n\t'YOUNG',\n\t'HERNANDEZ',\n\t'KING',\n\t'WRIGHT',\n\t'LOPEZ',\n\t'HILL',\n\t'SCOTT',\n\t'GREEN',\n\t'ADAMS',\n\t'BAKER',\n\t'GONZALEZ',\n\t'NELSON',\n\t'CARTER',\n\t'MITCHELL',\n\t'PEREZ',\n\t'ROBERTS',\n\t'TURNER',\n\t'PHILLIPS',\n\t'CAMPBELL',\n\t'PARKER',\n\t'EVANS',\n\t'EDWARDS',\n\t'COLLINS',\n\t'STEWART',\n\t'SANCHEZ',\n\t'MORRIS',\n\t'ROGERS',\n\t'REED',\n\t'COOK',\n\t'MORGAN',\n\t'BELL',\n\t'MURPHY',\n\t'BAILEY',\n\t'RIVERA',\n\t'COOPER',\n\t'RICHAR',\n]\nexport default getNames\n","import randomFromList from '../functions/randomFromList';\nimport getNames from './getNames';\nimport { Citizen, POSITIONS, MAX_BASKETBALL_APTITUDE, Assignment } from './citizen';\n\nexport default function createCitizens(amount: number, sorted:boolean = true): Citizen[] {\n  //Sorted by basketball Aptitude\n  const citizens: Citizen[] = getNames(amount).map(name => {\n    const citizen: Citizen = {\n      name: name,\n      basketBallAptitude: Math.ceil(Math.random() * MAX_BASKETBALL_APTITUDE),\n      preferredPosition: randomFromList(POSITIONS),\n      assignment: Assignment.Labor,\n    }\n    return citizen\n  })\n  if(sorted) citizens.sort((a, b) => b.basketBallAptitude - a.basketBallAptitude)\n  return citizens\n}\n","import { debug } from \"console\"\nimport { rmSync } from \"fs\"\nimport randomSummation from \"../functions/randomSummation\"\nimport { Assignment, Citizen, Position } from \"./citizen\"\nimport createCitizens from \"./createCitizens\"\nimport runDraft from \"./runDraft\"\n\nconst SCOUT_NUMBERS = 20\nconst SCOUT_MAX = 40\n\nconst GOVERNORS = 16\nconst INITIAL_CITIZENS = 10\n\nconst ADDITIONAL_CITIZENS = 20\n\nconst GAME_DATA = 'GAME_DATA'\n\nexport const EMPTY_GAME_DATA: GameData = {\n  draft: [[]],\n  rosters: [],\n  scavengerNumbers: [],\n  extraCitizens: [],\n  scoutNumbers: 0,\n  scoutMax: 0,\n  governors: 0,\n  initialCitizens: 0,\n  additionalCitizens: 0,\n}\n\nconst EMPTY_ROSTER: Map<Position, Citizen | null> = new Map<Position, Citizen | null>()\nEMPTY_ROSTER.set(Position.Center, null)\n\n\nexport interface GameData {\n  draft: Citizen[][]\n  rosters: Map<Position, Citizen | null>[]\n  scavengerNumbers: number[]\n  extraCitizens: Citizen[]\n  scoutNumbers: number\n  scoutMax: number\n  governors: number\n  initialCitizens: number\n  additionalCitizens: number\n}\n\nexport function createAndSetGameData(\n  scoutNumbers: number = SCOUT_NUMBERS,\n  scoutMax: number = SCOUT_MAX,\n  governors: number = GOVERNORS,\n  initialCitizens: number = INITIAL_CITIZENS,\n  additionalCitizens: number = ADDITIONAL_CITIZENS,\n): GameData {\n  const draft = runDraft(governors, initialCitizens)\n  const scavengerNumbers = randomSummation(scoutNumbers, scoutMax)\n  const extraCitizens = createCitizens(additionalCitizens, false)\n  const rosters = draft.map( _ => new Map(EMPTY_ROSTER))\n  const gameData: GameData = {\n    draft,\n    rosters,\n    scavengerNumbers,\n    extraCitizens,\n    scoutNumbers,\n    scoutMax,\n    governors,\n    initialCitizens,\n    additionalCitizens\n  }\n  \n  return updateGameData(gameData)\n}\n\nexport function getOrCreateGameData() {\n  const gameData: string | null = localStorage.getItem(GAME_DATA)\n  const result: GameData = gameData ? JSON.parse(gameData) : createAndSetGameData()\n  //convert objects to maps\n  result.rosters = result.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return result\n}\n\nexport function resetGameData() {\n  const gameData = getOrCreateGameData()\n  return createAndSetGameData(\n    gameData.scoutNumbers,\n    gameData.scoutMax,\n    gameData.governors,\n    gameData.initialCitizens,\n    gameData.additionalCitizens,\n  )\n}\n\nexport function updateGameData(gameData: GameData): GameData {\n  const tempData: any = gameData\n  //handle conversion to objects\n  tempData.rosters = gameData.rosters.map(r => Object.fromEntries(r))\n  localStorage.setItem(GAME_DATA, JSON.stringify(tempData))\n  //Handle conversion back to map\n  gameData.rosters = gameData.rosters.map(r => new Map(Object.entries(r)) as Map<Position, Citizen | null>)\n  return gameData\n}\n\nfunction citizenUpdater(\n  gameData: GameData,\n  district: number,\n  citizen: Citizen\n): GameData {\n  if (gameData.draft.length <= district) {\n    console.log(\"Error updatePositionAssignment: invalid district \", district, gameData)\n    return gameData\n  }\n  if (!gameData.rosters || gameData.rosters.length <= district) {\n    console.log(\"Error updatePositionAssignment: no rosters\", district, gameData)\n    return gameData\n  }\n  const citizens = gameData.draft[district]\n  const roster = gameData.rosters[district]\n  const position = citizen.assignedPosition\n  const oldPlayer = !position ? undefined : roster.get(position)\n  for(let i = 0; i < citizens.length; i++) {\n    if (oldPlayer && oldPlayer.name) {\n      if (citizens[i].name === oldPlayer.name) {\n        citizens[i].assignedPosition = undefined\n      }\n    }\n    if (citizens[i].name === citizen.name) {\n      const oldPosition = citizens[i].assignedPosition\n      if (oldPosition && citizen.assignedPosition !== oldPosition) roster.set(oldPosition, null)\n      citizens[i] = citizen\n    }\n  }\n  if (position) roster.set(position, citizen)\n  \n  return updateGameData(gameData)\n}\n\nexport function updateCitizen(\n  district: number,\n  citizen: Citizen\n): GameData {\n  return citizenUpdater(getOrCreateGameData(), district, citizen)\n}\n","\nimport { Citizen } from \"./citizen\";\nimport createCitizens from \"./createCitizens\";\n\nexport default function runDraft(governorCount: number, citizensPerGovernor: number): Citizen[][]{\n  const citizens = createCitizens(governorCount*citizensPerGovernor)\n  const results: Citizen[][] = []\n  for(let i=0; i<governorCount; i++){\n    results.push([])\n  }\n  let round = 0\n  \n  while (round < citizensPerGovernor) {\n    if (round%2 == 0) {\n      for(let i=0; i<governorCount; i++) {\n        results[i].push(citizens[round*governorCount + i])\n      }\n    } else {\n      let j = 0\n      for(let i=governorCount - 1; i >= 0; i--) {\n        results[i].push(citizens[round*governorCount + j])\n        j++\n      }\n    }\n    round++\n  }\n  return results\n}\n","export default function randomSummation(cards: number, max: number) {\n  const result: number[] = []\n  let current = 0\n  while (result.length < cards) {\n    current = current + Math.ceil(Math.random() * max)\n    result.push(current)\n  }\n  return result\n}\n","import React, { useCallback, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport './App.css';\nimport DraftResults from './display/DraftResults';\nimport TextField from './display/TextField';\nimport ScavengerTotals from './display/ScavengerTotals';\nimport {\n  getOrCreateGameData,\n  resetGameData,\n  updateGameData,\n  updateCitizen,\n} from './mockAPI/localStorage';\nimport DistrictCitizens from './display/DistrictCitizens';\nimport { Citizen } from './mockAPI/citizen';\n\n\n//Change these to change output\n\nfunction onChangeGameDataBuilder(\n  value: string,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  updateStore: (x: number) => void,\n  writeStore: () => void,\n): ((e: React.ChangeEvent<HTMLInputElement>) => void) {\n  return useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) { setValue(e.target.value) }\n    const parsed = Number(e.target.value)\n    if (Number.isInteger(parsed) && parsed > 0) {\n      updateStore(parsed)\n      writeStore()\n    }\n  }, [value, setValue, updateStore, writeStore])\n}\n\nfunction App() {\n  const [disabled, setDisabled] = useState(false)\n  const [gameData, setGameData] = useState(getOrCreateGameData())\n  const [scoutNumbers, setScoutNumbers] = useState(gameData.scoutNumbers.toString())\n  const [scoutMax, setScoutMax] = useState(gameData.scoutMax.toString())\n  const [governors, setGovernors] = useState(gameData.governors.toString())\n  const [initialCitizens, setInitialCitizens] = useState(gameData.initialCitizens.toString())\n  const [\n    additionalCitizens, setAdditionalCitizens\n  ] = useState(gameData.additionalCitizens.toString())\n\n  const resetData = useCallback(() => {\n    //For when using actual API\n    setDisabled(true)\n    setGameData(resetGameData())\n    setDisabled(false)\n  }, [resetGameData])\n\n  const updateCitizenData = useCallback(\n    (district: number, citizen: Citizen) => {\n      setDisabled(true)\n      setGameData(updateCitizen(district, citizen))\n      setDisabled(false)\n    },\n    [gameData]\n  )\n\n  function updateScoutNumbers(x: number) { gameData.scoutNumbers = x }\n  function updateScoutMax(x: number) { gameData.scoutMax = x }\n  function updateGovernors(x: number) { gameData.governors = x }\n  function updateInitialCitizens(x: number) { gameData.initialCitizens = x }\n  function updateAdditionalCitizens(x: number) { gameData.additionalCitizens = x }\n\n  function updateData(){\n    //For when using actual API\n    setDisabled(true)\n    setGameData(updateGameData(gameData))\n    setDisabled(false)\n  }\n\n  const changeScoutNumbers = onChangeGameDataBuilder(\n    scoutNumbers, setScoutNumbers, updateScoutNumbers, updateData\n  )\n  const changeScoutMax = onChangeGameDataBuilder(\n    scoutMax, setScoutMax, updateScoutMax, updateData\n  )\n  const changeGovernors = onChangeGameDataBuilder(\n    governors, setGovernors, updateGovernors, updateData\n  )\n  const changeInitialCitizens = onChangeGameDataBuilder(\n    initialCitizens, setInitialCitizens, updateInitialCitizens, updateData\n  )\n  const changeAdditionalCitizens = onChangeGameDataBuilder(\n    additionalCitizens, setAdditionalCitizens, updateAdditionalCitizens, updateData\n  )\n\n  return (\n    <div className=\"App\">\n      <Button disabled={disabled} variant='warning' onClick={resetData}>Reset Game</Button>\n      <h3>Configuration</h3>\n      <TextField\n        label={\"Total Scavenger Values\"}\n        value={scoutNumbers}\n        onChange={changeScoutNumbers}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Max Scavenger Value\"}\n        value={scoutMax}\n        onChange={changeScoutMax}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Governors\"}\n        value={governors}\n        onChange={changeGovernors}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Initial Citizens per Governor\"}\n        value={initialCitizens}\n        onChange={changeInitialCitizens}\n        disabled={disabled}\n      />\n      <TextField\n        label={\"Total Additional Citizens\"}\n        value={additionalCitizens}\n        onChange={changeAdditionalCitizens}\n        disabled={disabled}\n      />\n      <h3>Scavenger Values</h3>\n      <ScavengerTotals values={gameData.scavengerNumbers || []} />\n      <br/>\n      <h3>Draft Results</h3>\n      <DraftResults\n        draftResults={gameData.draft}\n        updateCitizen={updateCitizenData}\n        disabled={disabled}\n      />\n\n      <br/>\n      <h3>Additional Citizens</h3>\n      <DistrictCitizens citizens={gameData.extraCitizens}/>\n\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fields_container__1E8Zb\",\"label\":\"fields_label__2ZHJD\",\"textField\":\"fields_textField__1EM4s\",\"radioNoWrap\":\"fields_radioNoWrap__GwVEq\",\"radioOption\":\"fields_radioOption__2P4VG\",\"radioToggle\":\"fields_radioToggle__2L57R\",\"left\":\"fields_left__1C3eH\"};"],"sourceRoot":""}